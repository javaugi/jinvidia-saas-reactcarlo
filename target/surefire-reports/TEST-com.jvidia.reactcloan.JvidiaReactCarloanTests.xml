<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" version="3.0.2" name="com.jvidia.reactcloan.JvidiaReactCarloanTests" time="10.986" tests="1" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="21"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.class.path" value="E:\sisllccarlo\jinvidia-saas-reactcarlo\target\test-classes;E:\sisllccarlo\jinvidia-saas-reactcarlo\target\classes;C:\Users\javaugi\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\javaugi\.m2\repository\com\h2database\h2-mvstore\2.3.232\h2-mvstore-2.3.232.jar;C:\Users\javaugi\.m2\repository\org\hsqldb\hsqldb\2.7.3\hsqldb-2.7.3.jar;C:\Users\javaugi\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\javaugi\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb-reactive\3.4.5\spring-boot-starter-data-mongodb-reactive-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.5\spring-boot-starter-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\reactor-core\3.7.5\reactor-core-3.7.5.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-reactivestreams\5.2.1\mongodb-driver-reactivestreams-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson\5.2.1\bson-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-core\5.2.1\mongodb-driver-core-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson-record-codec\5.2.1\bson-record-codec-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-mongodb\4.4.5\spring-data-mongodb-4.4.5.jar;C:\Users\javaugi\.m2\repository\io\reactivex\rxjava2\rxjava\2.2.21\rxjava-2.2.21.jar;C:\Users\javaugi\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webflux\6.2.6\spring-webflux-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-core\6.2.6\spring-core-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jcl\6.2.6\spring-jcl-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-web\6.2.6\spring-web-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.4.5\spring-boot-starter-webflux-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.5\spring-boot-starter-json-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.4.5\spring-boot-starter-reactor-netty-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.2.5\reactor-netty-http-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-r2dbc\3.4.5\spring-boot-starter-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-r2dbc\3.4.5\spring-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-r2dbc\6.2.6\spring-r2dbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-spi\1.0.0.RELEASE\r2dbc-spi-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-pool\1.0.2.RELEASE\r2dbc-pool-1.0.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-pool\1.1.2\reactor-pool-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\postgresql\r2dbc-postgresql\1.0.7.RELEASE\r2dbc-postgresql-1.0.7.RELEASE.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\client\2.1\client-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\common\2.1\common-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\saslprep\1.1\saslprep-1.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\stringprep\1.1\stringprep-1.1.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.2.5\reactor-netty-core-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\dev\miku\r2dbc-mysql\0.8.2.RELEASE\r2dbc-mysql-0.8.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.2\reactor-extra-3.5.2.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty\1.2.5\reactor-netty-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\incubator\reactor-netty-incubator-quic\0.2.5\reactor-netty-incubator-quic-0.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-native-quic\0.0.71.Final\netty-incubator-codec-native-quic-0.0.71.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-classes-quic\0.0.71.Final\netty-incubator-codec-classes-quic-0.0.71.Final.jar;C:\Users\javaugi\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-h2\1.0.0.RELEASE\r2dbc-h2-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.5\spring-boot-starter-web-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webmvc\6.2.6\spring-webmvc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.4.5\spring-boot-starter-hateoas-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\hateoas\spring-hateoas\2.4.1\spring-hateoas-2.4.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\3.4.5\spring-boot-starter-data-rest-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-webmvc\4.4.5\spring-data-rest-webmvc-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-core\4.4.5\spring-data-rest-core-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\atteo\evo-inflector\1.3\evo-inflector-1.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.5\spring-boot-starter-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test\3.4.5\spring-boot-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.5\spring-boot-test-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\javaugi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\javaugi\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\javaugi\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\javaugi\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\javaugi\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-test\6.2.6\spring-test-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.5\spring-boot-starter-logging-3.4.5.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-batch\3.4.5\spring-boot-starter-batch-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.5\spring-boot-starter-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-core\5.2.2\spring-batch-core-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-infrastructure\5.2.2\spring-batch-infrastructure-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-core\1.14.6\micrometer-core-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\javaugi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-test\5.2.2\spring-batch-test-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.4.5\spring-boot-starter-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.4.5\spring-boot-actuator-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.4.5\spring-boot-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-observation\1.14.6\micrometer-observation-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-commons\1.14.6\micrometer-commons-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-jakarta9\1.14.6\micrometer-jakarta9-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jetty\3.4.5\spring-boot-starter-jetty-3.4.5.jar;C:\Users\javaugi\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-api\2.1.1\jakarta.websocket-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-client-api\2.1.1\jakarta.websocket-client-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlets\12.0.19\jetty-ee10-servlets-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-http\12.0.19\jetty-http-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-io\12.0.19\jetty-io-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-util\12.0.19\jetty-util-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-webapp\12.0.19\jetty-ee10-webapp-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-ee\12.0.19\jetty-ee-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-server\12.0.19\jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-session\12.0.19\jetty-session-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-xml\12.0.19\jetty-xml-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlet\12.0.19\jetty-ee10-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-security\12.0.19\jetty-security-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-server\12.0.19\jetty-ee10-websocket-jakarta-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-annotations\12.0.19\jetty-ee10-annotations-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-plus\12.0.19\jetty-ee10-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.0.1\jakarta.enterprise.cdi-api-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.0.1\jakarta.enterprise.lang-model-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.1.0\jakarta.interceptor-api-2.1.0.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-plus\12.0.19\jetty-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-commons\9.7.1\asm-commons-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-tree\9.7.1\asm-tree-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-client\12.0.19\jetty-ee10-websocket-jakarta-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-client\12.0.19\jetty-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-alpn-client\12.0.19\jetty-alpn-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-common\12.0.19\jetty-ee10-websocket-jakarta-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-client\12.0.19\jetty-websocket-core-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-servlet\12.0.19\jetty-ee10-websocket-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-server\12.0.19\jetty-websocket-core-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jetty-server\12.0.19\jetty-ee10-websocket-jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-api\12.0.19\jetty-websocket-jetty-api-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-common\12.0.19\jetty-websocket-jetty-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-common\12.0.19\jetty-websocket-core-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.5\spring-boot-starter-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aspects\6.2.6\spring-aspects-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.5\spring-boot-devtools-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot\3.4.5\spring-boot-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.5\spring-boot-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-orm\6.2.6\spring-orm-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-tx\6.2.6\spring-tx-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-core-jakarta\5.6.15.Final\hibernate-core-jakarta-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\javaugi\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\javaugi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\javaugi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\javaugi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.6.13.Final\hibernate-c3p0-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\javaugi\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\javaugi\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\javaugi\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\javaugi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\javaugi\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\javaugi\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\javaugi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\javaugi\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-ehcache\5.6.15.Final\hibernate-ehcache-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-core\6.6.13.Final\hibernate-core-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-beans\6.2.6\spring-beans-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jdbc\6.2.6\spring-jdbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jpa\3.4.5\spring-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-context\6.2.6\spring-context-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aop\6.2.6\spring-aop-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-commons\3.4.5\spring-data-commons-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jdbc\3.4.5\spring-data-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-relational\3.4.5\spring-data-relational-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-client\3.4.5\spring-boot-starter-oauth2-client-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-config\6.4.5\spring-security-config-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-core\6.4.5\spring-security-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-crypto\6.4.5\spring-security-crypto-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-client\6.4.5\spring-security-oauth2-client-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.4.5\spring-security-oauth2-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\oauth2-oidc-sdk\9.43.6\oauth2-oidc-sdk-9.43.6.jar;C:\Users\javaugi\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\content-type\2.2\content-type-2.2.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\lang-tag\1.7\lang-tag-1.7.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.4.5\spring-security-oauth2-jose-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\oauth\spring-security-oauth2\2.5.2.RELEASE\spring-security-oauth2-2.5.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-web\6.4.5\spring-security-web-6.4.5.jar;C:\Users\javaugi\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-taglibs\6.4.5\spring-security-taglibs-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-acl\6.4.5\spring-security-acl-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-expression\6.2.6\spring-expression-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-testcontainers\3.4.5\spring-boot-testcontainers-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\testcontainers\1.20.6\testcontainers-1.20.6.jar;C:\Users\javaugi\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\javaugi\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\javaugi\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\javaugi\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-api\3.4.1\docker-java-api-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.4.1\docker-java-transport-zerodep-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport\3.4.1\docker-java-transport-3.4.1.jar;C:\Users\javaugi\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\junit-jupiter\1.20.6\junit-jupiter-1.20.6.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="America/New_York"/>
    <property name="org.jboss.logging.provider" value="slf4j"/>
    <property name="os.name" value="Windows 10"/>
    <property name="java.vm.specification.version" value="21"/>
    <property name="APPLICATION_NAME" value="spring-openai"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="US"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21\bin"/>
    <property name="sun.java.command" value="C:\Users\javaugi\AppData\Local\Temp\surefire14791843184240039808\surefirebooter-20250515130350032_3.jar C:\Users\javaugi\AppData\Local\Temp\surefire14791843184240039808 2025-05-15T13-03-49_879-jvmRun1 surefire-20250515130350032_1tmp surefire_0-20250515130350032_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="E:\sisllccarlo\jinvidia-saas-reactcarlo\target\test-classes;E:\sisllccarlo\jinvidia-saas-reactcarlo\target\classes;C:\Users\javaugi\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\javaugi\.m2\repository\com\h2database\h2-mvstore\2.3.232\h2-mvstore-2.3.232.jar;C:\Users\javaugi\.m2\repository\org\hsqldb\hsqldb\2.7.3\hsqldb-2.7.3.jar;C:\Users\javaugi\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\javaugi\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb-reactive\3.4.5\spring-boot-starter-data-mongodb-reactive-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.5\spring-boot-starter-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\reactor-core\3.7.5\reactor-core-3.7.5.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-reactivestreams\5.2.1\mongodb-driver-reactivestreams-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson\5.2.1\bson-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-core\5.2.1\mongodb-driver-core-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson-record-codec\5.2.1\bson-record-codec-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-mongodb\4.4.5\spring-data-mongodb-4.4.5.jar;C:\Users\javaugi\.m2\repository\io\reactivex\rxjava2\rxjava\2.2.21\rxjava-2.2.21.jar;C:\Users\javaugi\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webflux\6.2.6\spring-webflux-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-core\6.2.6\spring-core-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jcl\6.2.6\spring-jcl-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-web\6.2.6\spring-web-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.4.5\spring-boot-starter-webflux-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.5\spring-boot-starter-json-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.4.5\spring-boot-starter-reactor-netty-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.2.5\reactor-netty-http-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-r2dbc\3.4.5\spring-boot-starter-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-r2dbc\3.4.5\spring-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-r2dbc\6.2.6\spring-r2dbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-spi\1.0.0.RELEASE\r2dbc-spi-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-pool\1.0.2.RELEASE\r2dbc-pool-1.0.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-pool\1.1.2\reactor-pool-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\postgresql\r2dbc-postgresql\1.0.7.RELEASE\r2dbc-postgresql-1.0.7.RELEASE.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\client\2.1\client-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\common\2.1\common-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\saslprep\1.1\saslprep-1.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\stringprep\1.1\stringprep-1.1.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.2.5\reactor-netty-core-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\dev\miku\r2dbc-mysql\0.8.2.RELEASE\r2dbc-mysql-0.8.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.2\reactor-extra-3.5.2.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty\1.2.5\reactor-netty-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\incubator\reactor-netty-incubator-quic\0.2.5\reactor-netty-incubator-quic-0.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-native-quic\0.0.71.Final\netty-incubator-codec-native-quic-0.0.71.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-classes-quic\0.0.71.Final\netty-incubator-codec-classes-quic-0.0.71.Final.jar;C:\Users\javaugi\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-h2\1.0.0.RELEASE\r2dbc-h2-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.5\spring-boot-starter-web-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webmvc\6.2.6\spring-webmvc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.4.5\spring-boot-starter-hateoas-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\hateoas\spring-hateoas\2.4.1\spring-hateoas-2.4.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\3.4.5\spring-boot-starter-data-rest-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-webmvc\4.4.5\spring-data-rest-webmvc-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-core\4.4.5\spring-data-rest-core-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\atteo\evo-inflector\1.3\evo-inflector-1.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.5\spring-boot-starter-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test\3.4.5\spring-boot-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.5\spring-boot-test-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\javaugi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\javaugi\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\javaugi\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\javaugi\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\javaugi\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-test\6.2.6\spring-test-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.5\spring-boot-starter-logging-3.4.5.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-batch\3.4.5\spring-boot-starter-batch-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.5\spring-boot-starter-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-core\5.2.2\spring-batch-core-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-infrastructure\5.2.2\spring-batch-infrastructure-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-core\1.14.6\micrometer-core-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\javaugi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-test\5.2.2\spring-batch-test-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.4.5\spring-boot-starter-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.4.5\spring-boot-actuator-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.4.5\spring-boot-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-observation\1.14.6\micrometer-observation-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-commons\1.14.6\micrometer-commons-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-jakarta9\1.14.6\micrometer-jakarta9-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jetty\3.4.5\spring-boot-starter-jetty-3.4.5.jar;C:\Users\javaugi\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-api\2.1.1\jakarta.websocket-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-client-api\2.1.1\jakarta.websocket-client-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlets\12.0.19\jetty-ee10-servlets-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-http\12.0.19\jetty-http-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-io\12.0.19\jetty-io-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-util\12.0.19\jetty-util-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-webapp\12.0.19\jetty-ee10-webapp-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-ee\12.0.19\jetty-ee-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-server\12.0.19\jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-session\12.0.19\jetty-session-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-xml\12.0.19\jetty-xml-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlet\12.0.19\jetty-ee10-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-security\12.0.19\jetty-security-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-server\12.0.19\jetty-ee10-websocket-jakarta-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-annotations\12.0.19\jetty-ee10-annotations-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-plus\12.0.19\jetty-ee10-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.0.1\jakarta.enterprise.cdi-api-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.0.1\jakarta.enterprise.lang-model-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.1.0\jakarta.interceptor-api-2.1.0.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-plus\12.0.19\jetty-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-commons\9.7.1\asm-commons-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-tree\9.7.1\asm-tree-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-client\12.0.19\jetty-ee10-websocket-jakarta-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-client\12.0.19\jetty-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-alpn-client\12.0.19\jetty-alpn-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-common\12.0.19\jetty-ee10-websocket-jakarta-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-client\12.0.19\jetty-websocket-core-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-servlet\12.0.19\jetty-ee10-websocket-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-server\12.0.19\jetty-websocket-core-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jetty-server\12.0.19\jetty-ee10-websocket-jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-api\12.0.19\jetty-websocket-jetty-api-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-common\12.0.19\jetty-websocket-jetty-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-common\12.0.19\jetty-websocket-core-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.5\spring-boot-starter-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aspects\6.2.6\spring-aspects-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.5\spring-boot-devtools-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot\3.4.5\spring-boot-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.5\spring-boot-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-orm\6.2.6\spring-orm-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-tx\6.2.6\spring-tx-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-core-jakarta\5.6.15.Final\hibernate-core-jakarta-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\javaugi\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\javaugi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\javaugi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\javaugi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.6.13.Final\hibernate-c3p0-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\javaugi\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\javaugi\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\javaugi\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\javaugi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\javaugi\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\javaugi\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\javaugi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\javaugi\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-ehcache\5.6.15.Final\hibernate-ehcache-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-core\6.6.13.Final\hibernate-core-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-beans\6.2.6\spring-beans-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jdbc\6.2.6\spring-jdbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jpa\3.4.5\spring-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-context\6.2.6\spring-context-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aop\6.2.6\spring-aop-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-commons\3.4.5\spring-data-commons-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jdbc\3.4.5\spring-data-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-relational\3.4.5\spring-data-relational-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-client\3.4.5\spring-boot-starter-oauth2-client-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-config\6.4.5\spring-security-config-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-core\6.4.5\spring-security-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-crypto\6.4.5\spring-security-crypto-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-client\6.4.5\spring-security-oauth2-client-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.4.5\spring-security-oauth2-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\oauth2-oidc-sdk\9.43.6\oauth2-oidc-sdk-9.43.6.jar;C:\Users\javaugi\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\content-type\2.2\content-type-2.2.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\lang-tag\1.7\lang-tag-1.7.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.4.5\spring-security-oauth2-jose-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\oauth\spring-security-oauth2\2.5.2.RELEASE\spring-security-oauth2-2.5.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-web\6.4.5\spring-security-web-6.4.5.jar;C:\Users\javaugi\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-taglibs\6.4.5\spring-security-taglibs-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-acl\6.4.5\spring-security-acl-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-expression\6.2.6\spring-expression-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-testcontainers\3.4.5\spring-boot-testcontainers-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\testcontainers\1.20.6\testcontainers-1.20.6.jar;C:\Users\javaugi\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\javaugi\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\javaugi\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\javaugi\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-api\3.4.1\docker-java-api-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.4.1\docker-java-transport-zerodep-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport\3.4.1\docker-java-transport-3.4.1.jar;C:\Users\javaugi\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\junit-jupiter\1.20.6\junit-jupiter-1.20.6.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\javaugi"/>
    <property name="user.language" value="en"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2024-10-15"/>
    <property name="java.home" value="C:\Program Files\Java\jdk-21"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="E:\sisllccarlo\jinvidia-saas-reactcarlo"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="FILE_LOG_CHARSET" value="UTF-8"/>
    <property name="java.awt.headless" value="true"/>
    <property name="surefire.real.class.path" value="C:\Users\javaugi\AppData\Local\Temp\surefire14791843184240039808\surefirebooter-20250515130350032_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="21.0.5+9-LTS-239"/>
    <property name="user.name" value="javaugi"/>
    <property name="stdout.encoding" value="Cp1252"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\javaugi\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\javaugi\AppData\Local\Temp\"/>
    <property name="java.version" value="21.0.5"/>
    <property name="user.dir" value="E:\sisllccarlo\jinvidia-saas-reactcarlo"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="PID" value="26196"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
    <property name="native.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\javaugi\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\local\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\javaugi\bin;C:\Program Files\Common Files\Oracle\Java\javapath;E:\software\curl;C:\Program Files (x86)\Intel\iCLS Client;C:\Program Files\Intel\iCLS Client;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Microsoft\Web Platform Installer;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin;C:\Program Files (x86)\QuickTime\QTSystem;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files (x86)\GNU\GnuPG\pub;E:\software\uru;E:\software\sqlite;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Yarn\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\WINDOWS\System32\OpenSSH;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\MariaDB 10.4;C:\Program Files\MariaDB 10.4\bin;E:\apache\apache-maven-3.9.9;E:\apache\apache-maven-3.9.9\bin;C:\Program Files\Java\jdk-21;C:\Program Files\Java\jdk-21\bin;C:\Program Files (x86)\NSIS\Bin;C:\Program Files\PuTTY;C:\Program Files\Git\cmd;C:\Program Files\nodejs;C:\Program Files\Docker\Docker\resources\bin;C:\Users\javaugi\AppData\Roaming\Python\Python37\Scripts;C:\Users\javaugi\AppData\Local\GitHubDesktop\bin;C:\Users\javaugi\AppData\Local\Yarn\bin;C:\Users\javaugi\AppData\Local\Microsoft\WindowsApps;C:\Users\javaugi\AppData\Roaming\npm;C:\Program Files\Git\usr\bin\vendor_perl;C:\Program Files\Git\usr\bin\core_perl;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1252"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="21.0.5+9-LTS-239"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="65.0"/>
    <property name="LOGGED_APPLICATION_NAME" value="[spring-openai] "/>
  </properties>
  <testcase name="contextLoads" classname="com.jvidia.reactcloan.JvidiaReactCarloanTests" time="0.533">
    <system-out><![CDATA[13:03:51.246 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.jvidia.reactcloan.JvidiaReactCarloanTests]: JvidiaReactCarloanTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
13:03:51.483 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.jvidia.reactcloan.JvidiaReactCarloanApplication for test class com.jvidia.reactcloan.JvidiaReactCarloanTests
13:03:51.699 [main] INFO org.springframework.boot.devtools.restart.RestartApplicationListener -- Restart disabled due to context in which it is running

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/

 :: Spring Boot ::                (v3.4.5)

2025-05-15T13:03:52.046-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] o.h.v.i.xml.config.ValidationXmlParser   : Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-15T13:03:52.049-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via TCCL
2025-05-15T13:03:52.049-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-15T13:03:52.050-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] o.h.v.i.xml.config.ValidationXmlParser   : No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-15T13:03:52.057-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] o.h.v.i.e.resolver.TraversableResolvers  : Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-15T13:03:52.058-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] o.h.v.i.e.resolver.TraversableResolvers  : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-15T13:03:52.097-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] .h.v.m.ResourceBundleMessageInterpolator : Loaded expression factory via original TCCL
2025-05-15T13:03:52.099-04:00  INFO 26196 --- [spring-openai] [           main] c.j.reactcloan.JvidiaReactCarloanTests   : Starting JvidiaReactCarloanTests using Java 21.0.5 with PID 26196 (started by javaugi in E:\sisllccarlo\jinvidia-saas-reactcarlo)
2025-05-15T13:03:52.100-04:00  INFO 26196 --- [spring-openai] [           main] c.j.reactcloan.JvidiaReactCarloanTests   : No active profile set, falling back to 1 default profile: "default"
2025-05-15T13:03:52.259-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] .i.e.ValidatorFactoryConfigurationHelper : HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-15T13:03:52.268-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-15T13:03:52.268-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-15T13:03:52.269-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-15T13:03:52.269-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-15T13:03:52.269-04:00 DEBUG 26196 --- [spring-openai] [kground-preinit] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-15T13:03:53.243-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-15T13:03:53.243-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-05-15T13:03:53.372-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ProductWebFluxRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-15T13:03:53.374-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JPA - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.UserReactiveRepository; If you want this repository to be a JPA repository, consider annotating your entities with one of these annotations: jakarta.persistence.Entity, jakarta.persistence.MappedSuperclass (preferred), or consider extending one of the following types with your repository: org.springframework.data.jpa.repository.JpaRepository
2025-05-15T13:03:53.406-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 149 ms. Found 3 JPA repository interfaces.
2025-05-15T13:03:54.259-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-15T13:03:54.260-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2025-05-15T13:03:54.271-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ClientRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-15T13:03:54.272-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ProductRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-15T13:03:54.272-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ProductWebFluxRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-15T13:03:54.273-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.UserReactiveRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-15T13:03:54.273-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.UserRepository; If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2025-05-15T13:03:54.273-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 JDBC repository interfaces.
2025-05-15T13:03:54.283-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-15T13:03:54.284-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-05-15T13:03:54.295-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive MongoDB - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ClientRepository; If you want this repository to be a Reactive MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.ReactiveMongoRepository
2025-05-15T13:03:54.296-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive MongoDB - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ProductRepository; If you want this repository to be a Reactive MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.ReactiveMongoRepository
2025-05-15T13:03:54.296-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive MongoDB - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ProductWebFluxRepository; If you want this repository to be a Reactive MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.ReactiveMongoRepository
2025-05-15T13:03:54.297-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive MongoDB - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.UserReactiveRepository; If you want this repository to be a Reactive MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.ReactiveMongoRepository
2025-05-15T13:03:54.297-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data Reactive MongoDB - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.UserRepository; If you want this repository to be a Reactive MongoDB repository, consider annotating your entities with one of these annotations: org.springframework.data.mongodb.core.mapping.Document (preferred), or consider extending one of the following types with your repository: org.springframework.data.mongodb.repository.ReactiveMongoRepository
2025-05-15T13:03:54.298-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10 ms. Found 0 Reactive MongoDB repository interfaces.
2025-05-15T13:03:54.316-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode
2025-05-15T13:03:54.317-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data R2DBC repositories in DEFAULT mode.
2025-05-15T13:03:54.325-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ClientRepository; If you want this repository to be a R2DBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.r2dbc.repository.R2dbcRepository
2025-05-15T13:03:54.326-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ProductRepository; If you want this repository to be a R2DBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.r2dbc.repository.R2dbcRepository
2025-05-15T13:03:54.327-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.ProductWebFluxRepository; If you want this repository to be a R2DBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.r2dbc.repository.R2dbcRepository
2025-05-15T13:03:54.327-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.UserReactiveRepository; If you want this repository to be a R2DBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.r2dbc.repository.R2dbcRepository
2025-05-15T13:03:54.328-04:00  INFO 26196 --- [spring-openai] [           main] .RepositoryConfigurationExtensionSupport : Spring Data R2DBC - Could not safely identify store assignment for repository candidate interface com.jvidia.reactcloan.repo.UserRepository; If you want this repository to be a R2DBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table (preferred), or consider extending one of the following types with your repository: org.springframework.data.r2dbc.repository.R2dbcRepository
2025-05-15T13:03:54.328-04:00  INFO 26196 --- [spring-openai] [           main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9 ms. Found 0 R2DBC repository interfaces.
2025-05-15T13:03:55.089-04:00  INFO 26196 --- [spring-openai] [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
MapToJsonConverter instantiated!
2025-05-15T13:03:55.324-04:00 DEBUG 26196 --- [spring-openai] [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2025-05-15T13:03:55.363-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.jpa.internal.util.LogHelper  : PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: jdk.internal.loader.ClassLoaders$AppClassLoader@70dea4e
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@492c8137
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/sisllccarlo/jinvidia-saas-reactcarlo/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.jvidia.reactcloan.entity.Account
		com.jvidia.reactcloan.entity.Client
		com.jvidia.reactcloan.entity.Product
		com.jvidia.reactcloan.entity.Role
		com.jvidia.reactcloan.entity.User
		com.jvidia.reactcloan.entity.UserAccount]
	Mapping files names []
	Properties []
2025-05-15T13:03:55.385-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.i.internal.IntegratorServiceImpl     : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2025-05-15T13:03:55.387-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.i.internal.IntegratorServiceImpl     : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2025-05-15T13:03:55.389-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.i.internal.IntegratorServiceImpl     : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2025-05-15T13:03:55.452-04:00  INFO 26196 --- [spring-openai] [           main] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.15.Final
2025-05-15T13:03:55.454-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2025-05-15T13:03:55.623-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.service.spi.ServiceBinding   : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2025-05-15T13:03:55.638-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.c.internal.RegionFactoryInitiator    : Cannot default RegionFactory based on registered strategies as `[class org.hibernate.cache.ehcache.internal.EhcacheRegionFactory, class org.hibernate.cache.ehcache.internal.SingletonEhcacheRegionFactory]` RegionFactory strategies were registered
2025-05-15T13:03:55.639-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.c.internal.RegionFactoryInitiator    : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2025-05-15T13:03:55.652-04:00  INFO 26196 --- [spring-openai] [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2025-05-15T13:03:55.709-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BooleanType@2ae5580
2025-05-15T13:03:55.709-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BooleanType@2ae5580
2025-05-15T13:03:55.709-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@2ae5580
2025-05-15T13:03:55.710-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@5a58db42
2025-05-15T13:03:55.710-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.TrueFalseType@ba86c53
2025-05-15T13:03:55.711-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.YesNoType@53ddabc6
2025-05-15T13:03:55.712-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.ByteType@2a20da9f
2025-05-15T13:03:55.712-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.ByteType@2a20da9f
2025-05-15T13:03:55.712-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2a20da9f
2025-05-15T13:03:55.713-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.CharacterType@1f70bce5
2025-05-15T13:03:55.713-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.CharacterType@1f70bce5
2025-05-15T13:03:55.714-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1f70bce5
2025-05-15T13:03:55.715-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.ShortType@bb21063
2025-05-15T13:03:55.715-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.ShortType@bb21063
2025-05-15T13:03:55.715-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@bb21063
2025-05-15T13:03:55.716-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.IntegerType@fe156f4
2025-05-15T13:03:55.716-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.IntegerType@fe156f4
2025-05-15T13:03:55.716-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@fe156f4
2025-05-15T13:03:55.717-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.LongType@62c46e53
2025-05-15T13:03:55.717-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.LongType@62c46e53
2025-05-15T13:03:55.717-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.LongType@62c46e53
2025-05-15T13:03:55.718-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.FloatType@104cfb24
2025-05-15T13:03:55.718-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.FloatType@104cfb24
2025-05-15T13:03:55.718-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@104cfb24
2025-05-15T13:03:55.718-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.DoubleType@3ac406d4
2025-05-15T13:03:55.719-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.DoubleType@3ac406d4
2025-05-15T13:03:55.719-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3ac406d4
2025-05-15T13:03:55.719-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@60fbc34d
2025-05-15T13:03:55.719-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@60fbc34d
2025-05-15T13:03:55.720-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@341964d0
2025-05-15T13:03:55.721-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@341964d0
2025-05-15T13:03:55.722-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.StringType@35c00c
2025-05-15T13:03:55.723-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.StringType@35c00c
2025-05-15T13:03:55.723-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@e4ef4c0
2025-05-15T13:03:55.724-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@9746157
2025-05-15T13:03:55.725-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.UrlType@10e4ee33
2025-05-15T13:03:55.725-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.UrlType@10e4ee33
2025-05-15T13:03:55.727-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Duration -> org.hibernate.type.DurationType@46748b04
2025-05-15T13:03:55.727-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Duration -> org.hibernate.type.DurationType@46748b04
2025-05-15T13:03:55.728-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Instant -> org.hibernate.type.InstantType@2b19b346
2025-05-15T13:03:55.728-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.Instant -> org.hibernate.type.InstantType@2b19b346
2025-05-15T13:03:55.729-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e45fbd0
2025-05-15T13:03:55.729-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4e45fbd0
2025-05-15T13:03:55.730-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1835b783
2025-05-15T13:03:55.730-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1835b783
2025-05-15T13:03:55.731-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1b9c716f
2025-05-15T13:03:55.731-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1b9c716f
2025-05-15T13:03:55.732-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ddf5118
2025-05-15T13:03:55.732-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@5ddf5118
2025-05-15T13:03:55.733-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@27d6267e
2025-05-15T13:03:55.733-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@27d6267e
2025-05-15T13:03:55.733-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53fc870f
2025-05-15T13:03:55.734-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@53fc870f
2025-05-15T13:03:55.735-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.DateType@4fc71437
2025-05-15T13:03:55.735-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.DateType@4fc71437
2025-05-15T13:03:55.736-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.TimeType@323eecf8
2025-05-15T13:03:55.736-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@323eecf8
2025-05-15T13:03:55.737-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.TimestampType@7affee54
2025-05-15T13:03:55.738-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7affee54
2025-05-15T13:03:55.738-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7affee54
2025-05-15T13:03:55.739-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@43719e98
2025-05-15T13:03:55.740-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.CalendarType@11ee671f
2025-05-15T13:03:55.740-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11ee671f
2025-05-15T13:03:55.740-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11ee671f
2025-05-15T13:03:55.741-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@14b9df65
2025-05-15T13:03:55.742-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@759f45f1
2025-05-15T13:03:55.743-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.LocaleType@62ee1c89
2025-05-15T13:03:55.743-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@62ee1c89
2025-05-15T13:03:55.743-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.CurrencyType@72bce309
2025-05-15T13:03:55.744-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@72bce309
2025-05-15T13:03:55.744-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.TimeZoneType@5b2ff4df
2025-05-15T13:03:55.744-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@5b2ff4df
2025-05-15T13:03:55.745-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.ClassType@5c9e6d95
2025-05-15T13:03:55.745-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5c9e6d95
2025-05-15T13:03:55.746-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7cd3860
2025-05-15T13:03:55.746-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7cd3860
2025-05-15T13:03:55.746-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@2d3eb1ea
2025-05-15T13:03:55.747-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BinaryType@75c8d8e7
2025-05-15T13:03:55.747-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BinaryType@75c8d8e7
2025-05-15T13:03:55.747-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BinaryType@75c8d8e7
2025-05-15T13:03:55.748-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@26feccf7
2025-05-15T13:03:55.748-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@26feccf7
2025-05-15T13:03:55.748-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@26feccf7
2025-05-15T13:03:55.749-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration row_version -> org.hibernate.type.RowVersionType@55e4dd68
2025-05-15T13:03:55.749-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.ImageType@6f36267d
2025-05-15T13:03:55.750-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.CharArrayType@25435731
2025-05-15T13:03:55.750-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.CharArrayType@25435731
2025-05-15T13:03:55.750-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.CharArrayType@25435731
2025-05-15T13:03:55.751-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6cc44207
2025-05-15T13:03:55.751-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6cc44207
2025-05-15T13:03:55.751-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6cc44207
2025-05-15T13:03:55.751-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.TextType@7ebaf0d
2025-05-15T13:03:55.752-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.NTextType@4d2bc56a
2025-05-15T13:03:55.753-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BlobType@366b4a7b
2025-05-15T13:03:55.753-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@366b4a7b
2025-05-15T13:03:55.753-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@283ecb4b
2025-05-15T13:03:55.754-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.ClobType@665b441e
2025-05-15T13:03:55.754-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@665b441e
2025-05-15T13:03:55.755-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.NClobType@5edd9b4f
2025-05-15T13:03:55.755-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@5edd9b4f
2025-05-15T13:03:55.756-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@7378c4a4
2025-05-15T13:03:55.756-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7c02b3cb
2025-05-15T13:03:55.757-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.SerializableType@4eb5764d
2025-05-15T13:03:55.759-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.ObjectType@336070ab
2025-05-15T13:03:55.760-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@336070ab
2025-05-15T13:03:55.760-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3dec769
2025-05-15T13:03:55.760-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@282c5075
2025-05-15T13:03:55.760-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2ed35f24
2025-05-15T13:03:55.760-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@362b384c
2025-05-15T13:03:55.760-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@433b546f
2025-05-15T13:03:55.760-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@9de1b85
2025-05-15T13:03:55.761-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3d405fe5
2025-05-15T13:03:55.761-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@52c6e959
2025-05-15T13:03:55.769-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.BootstrapContextImpl   : Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5977bdea] into BootstrapContext; was [null]
2025-05-15T13:03:55.769-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5977bdea) [was null]
2025-05-15T13:03:55.770-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.BootstrapContextImpl   : Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6c225adb] into BootstrapContext; was [null]
2025-05-15T13:03:55.770-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.BootstrapContextImpl   : Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@69cc49ec] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6b71e98f]
2025-05-15T13:03:55.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.BootstrapContextImpl   : Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5977bdea]
2025-05-15T13:03:55.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@5977bdea]
2025-05-15T13:03:55.818-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2025-05-15T13:03:55.818-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2025-05-15T13:03:55.819-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-15T13:03:55.819-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2025-05-15T13:03:55.820-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2025-05-15T13:03:55.821-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2025-05-15T13:03:55.821-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2025-05-15T13:03:55.822-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-15T13:03:55.823-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2025-05-15T13:03:55.824-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2025-05-15T13:03:55.824-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2025-05-15T13:03:55.824-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2025-05-15T13:03:55.825-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2025-05-15T13:03:55.825-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2025-05-15T13:03:55.837-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.j.e.i.JdbcEnvironmentInitiator     : Database ->
       name : H2
    version : 2.3.232 (2024-08-11)
      major : 2
      minor : 3
2025-05-15T13:03:55.838-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.j.e.i.JdbcEnvironmentInitiator     : Driver ->
       name : H2 JDBC Driver
    version : 2.3.232 (2024-08-11)
      major : 2
      minor : 3
2025-05-15T13:03:55.838-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.j.e.i.JdbcEnvironmentInitiator     : JDBC version : 4.3
2025-05-15T13:03:55.850-04:00  INFO 26196 --- [spring-openai] [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2025-05-15T13:03:55.866-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.j.env.spi.IdentifierHelperBuilder  : JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
2025-05-15T13:03:55.882-04:00  INFO 26196 --- [spring-openai] [           main] org.hibernate.orm.beans                  : HHH10005002: No explicit CDI BeanManager reference was passed to Hibernate, but CDI is available on the Hibernate ClassLoader.
2025-05-15T13:03:55.887-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ec156fb] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@56d742ad]
2025-05-15T13:03:55.915-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.model.relational.Namespace      : Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2025-05-15T13:03:55.925-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.jvidia.reactcloan.entity.Account
2025-05-15T13:03:55.942-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2025-05-15T13:03:55.945-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Account
2025-05-15T13:03:55.950-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.jvidia.reactcloan.entity.Account on table Account
2025-05-15T13:03:55.966-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=id, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.968-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Account] is safe
2025-05-15T13:03:55.968-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Account
2025-05-15T13:03:55.969-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2025-05-15T13:03:55.970-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Account:id]
2025-05-15T13:03:55.972-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2025-05-15T13:03:55.974-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2025-05-15T13:03:55.975-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.BinderHelper           : #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2025-05-15T13:03:55.976-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.976-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property accountType with lazy=false
2025-05-15T13:03:55.976-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Account:accountType]
2025-05-15T13:03:55.976-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for accountType
2025-05-15T13:03:55.976-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property accountType
2025-05-15T13:03:55.977-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Account), mappingColumn=balance, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.977-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property balance with lazy=false
2025-05-15T13:03:55.977-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Account:balance]
2025-05-15T13:03:55.977-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for balance
2025-05-15T13:03:55.977-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property balance
2025-05-15T13:03:55.981-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.jvidia.reactcloan.entity.Client
2025-05-15T13:03:55.981-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2025-05-15T13:03:55.981-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Client
2025-05-15T13:03:55.982-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.jvidia.reactcloan.entity.Client on table Client
2025-05-15T13:03:55.983-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=id, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.983-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Client] is safe
2025-05-15T13:03:55.983-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Client
2025-05-15T13:03:55.983-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2025-05-15T13:03:55.983-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Client:id]
2025-05-15T13:03:55.983-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2025-05-15T13:03:55.983-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.BinderHelper           : #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=email, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property email with lazy=false
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Client:email]
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for email
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property email
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Client), mappingColumn=name, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property name with lazy=false
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Client:name]
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for name
2025-05-15T13:03:55.984-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property name
2025-05-15T13:03:55.985-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.jvidia.reactcloan.entity.Product
2025-05-15T13:03:55.985-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2025-05-15T13:03:55.985-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Product
2025-05-15T13:03:55.985-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.jvidia.reactcloan.entity.Product on table Product
2025-05-15T13:03:55.987-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Product), mappingColumn=id, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.988-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Product] is safe
2025-05-15T13:03:55.988-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Product
2025-05-15T13:03:55.988-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2025-05-15T13:03:55.988-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Product:id]
2025-05-15T13:03:55.988-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.BinderHelper           : #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Product), mappingColumn=description, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property description with lazy=false
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Product:description]
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for description
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property description
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Product), mappingColumn=name, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.989-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property name with lazy=false
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Product:name]
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for name
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property name
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Product), mappingColumn=price, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property price with lazy=false
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Product:price]
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for price
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property price
2025-05-15T13:03:55.990-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Product), mappingColumn=quantity, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property quantity with lazy=false
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Product:quantity]
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for quantity
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property quantity
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Product), mappingColumn=status, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property status with lazy=false
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Product:status]
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for status
2025-05-15T13:03:55.991-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property status
2025-05-15T13:03:55.992-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.jvidia.reactcloan.entity.Role
2025-05-15T13:03:55.992-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2025-05-15T13:03:55.992-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Role
2025-05-15T13:03:55.993-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.jvidia.reactcloan.entity.Role on table Role
2025-05-15T13:03:55.997-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=id, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Role] is safe
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Role
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Role:id]
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.BinderHelper           : #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2025-05-15T13:03:55.998-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=name, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:55.999-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property name with lazy=false
2025-05-15T13:03:55.999-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.Role:name]
2025-05-15T13:03:55.999-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for name
2025-05-15T13:03:55.999-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property name
2025-05-15T13:03:56.000-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2025-05-15T13:03:56.000-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Role), mappingColumn=user, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.003-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property user
2025-05-15T13:03:56.003-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.003-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2025-05-15T13:03:56.004-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name User
2025-05-15T13:03:56.004-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.jvidia.reactcloan.entity.User on table USERS
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=id, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.User] is safe
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.User:id]
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2025-05-15T13:03:56.009-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.BinderHelper           : #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=firstName, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property firstName with lazy=false
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.User:firstName]
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for firstName
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property firstName
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=lastName, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property lastName with lazy=false
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.User:lastName]
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for lastName
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property lastName
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=name, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property name with lazy=false
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.User:name]
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for name
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property name
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=password, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property password with lazy=false
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.User:password]
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for password
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property password
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2025-05-15T13:03:56.011-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=roles, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.013-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.021-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=element, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.022-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=roles_KEY, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.023-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='roles_KEY', referencedColumn='null', mappedBy='null'}
2025-05-15T13:03:56.024-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2025-05-15T13:03:56.024-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2025-05-15T13:03:56.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.CollectionBinder     : Collection role: com.jvidia.reactcloan.entity.User.roles
2025-05-15T13:03:56.026-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property roles
2025-05-15T13:03:56.026-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2025-05-15T13:03:56.026-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=userAccounts, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.026-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=null, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.026-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=element, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.026-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=userAccounts_KEY, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.026-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='userAccounts_KEY', referencedColumn='null', mappedBy='null'}
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='user'}
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.CollectionBinder     : Collection role: com.jvidia.reactcloan.entity.User.userAccounts
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property userAccounts
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=userEmail, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property userEmail with lazy=false
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.User:userEmail]
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for userEmail
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property userEmail
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=username, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property username with lazy=false
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.User:username]
2025-05-15T13:03:56.027-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for username
2025-05-15T13:03:56.028-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property username
2025-05-15T13:03:56.028-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.jvidia.reactcloan.entity.UserAccount
2025-05-15T13:03:56.028-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2025-05-15T13:03:56.028-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name UserAccount
2025-05-15T13:03:56.028-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.jvidia.reactcloan.entity.UserAccount on table UserAccount
2025-05-15T13:03:56.030-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=id, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.UserAccount] is safe
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.UserAccount
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.UserAccount:id]
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.BinderHelper           : #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=account, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property account with lazy=false
2025-05-15T13:03:56.031-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.UserAccount:account]
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for account
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property account
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=accountBalance, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property accountBalance with lazy=false
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.UserAccount:accountBalance]
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for accountBalance
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property accountBalance
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=accountType, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property accountType with lazy=false
2025-05-15T13:03:56.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.UserAccount:accountType]
2025-05-15T13:03:56.035-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for accountType
2025-05-15T13:03:56.035-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property accountType
2025-05-15T13:03:56.035-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=cashBalance, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.036-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property cashBalance with lazy=false
2025-05-15T13:03:56.036-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.jvidia.reactcloan.entity.UserAccount:cashBalance]
2025-05-15T13:03:56.036-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for cashBalance
2025-05-15T13:03:56.036-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property cashBalance
2025-05-15T13:03:56.036-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='user_id', referencedColumn='', mappedBy=''}
2025-05-15T13:03:56.036-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(UserAccount), mappingColumn=user, insertable=true, updatable=true, unique=false}
2025-05-15T13:03:56.036-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.PropertyBinder       : Building property user
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for accountType
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for balance
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for email
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for name
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for description
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for name
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for price
2025-05-15T13:03:56.038-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for quantity
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for status
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for name
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for firstName
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for lastName
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for name
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for password
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for userEmail
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for username
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for account
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for accountBalance
2025-05-15T13:03:56.039-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for accountType
2025-05-15T13:03:56.041-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for cashBalance
2025-05-15T13:03:56.046-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.mapping.PrimaryKey         : Forcing column [id] to be non-null as it is part of the primary key for table [account]
2025-05-15T13:03:56.046-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.mapping.PrimaryKey         : Forcing column [id] to be non-null as it is part of the primary key for table [client]
2025-05-15T13:03:56.046-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.mapping.PrimaryKey         : Forcing column [id] to be non-null as it is part of the primary key for table [product]
2025-05-15T13:03:56.046-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.mapping.PrimaryKey         : Forcing column [id] to be non-null as it is part of the primary key for table [role]
2025-05-15T13:03:56.046-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.mapping.PrimaryKey         : Forcing column [id] to be non-null as it is part of the primary key for table [users]
2025-05-15T13:03:56.046-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.mapping.PrimaryKey         : Forcing column [id] to be non-null as it is part of the primary key for table [useraccount]
2025-05-15T13:03:56.047-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.CollectionSecondPass   : Second pass for collection: com.jvidia.reactcloan.entity.User.roles
2025-05-15T13:03:56.047-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.CollectionBinder     : Binding a OneToMany: com.jvidia.reactcloan.entity.User.roles through a foreign key
2025-05-15T13:03:56.049-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.CollectionBinder     : Mapping collection: com.jvidia.reactcloan.entity.User.roles -> Role
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.annotations.TableBinder  : Retrieving property com.jvidia.reactcloan.entity.Role.user
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.CollectionSecondPass   : Mapped collection key: user_id, one-to-many: com.jvidia.reactcloan.entity.Role
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.CollectionSecondPass   : Second pass for collection: com.jvidia.reactcloan.entity.User.userAccounts
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.CollectionBinder     : Binding a OneToMany: com.jvidia.reactcloan.entity.User.userAccounts through a foreign key
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.cfg.annotations.CollectionBinder     : Mapping collection: com.jvidia.reactcloan.entity.User.userAccounts -> UserAccount
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.cfg.annotations.TableBinder  : Retrieving property com.jvidia.reactcloan.entity.UserAccount.user
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.CollectionSecondPass   : Mapped collection key: user_id, one-to-many: com.jvidia.reactcloan.entity.UserAccount
2025-05-15T13:03:56.050-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.b.i.InFlightMetadataCollectorImpl    : Resolving reference to class: com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.054-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.b.i.InFlightMetadataCollectorImpl    : Resolving reference to class: com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.056-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.b.i.InFlightMetadataCollectorImpl    : Resolving reference to class: com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.057-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.b.i.InFlightMetadataCollectorImpl    : Resolving reference to class: com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.091-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.SessionFactoryImpl  : Building session factory
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : SessionFactory name : null
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Automatic flush during beforeCompletion(): enabled
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Automatic session close at end of transaction: disabled
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Statistics: disabled
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Deleted entity synthetic identifier rollback: disabled
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Default entity-mode: pojo
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Allow initialization of lazy state outside session : disabled
2025-05-15T13:03:56.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Using BatchFetchStyle : LEGACY
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Default batch fetch size: -1
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Maximum outer join fetch depth: null
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Default null ordering: NONE
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Order SQL updates by primary key: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Order SQL inserts for batching: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : multi-tenancy strategy : NONE
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JTA Track by Thread: enabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Query language substitutions: {}
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Named query checking : enabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Second-level cache: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Second-level query cache: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Second-level query cache factory: null
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Second-level cache region prefix: null
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Optimize second-level cache for minimal puts: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Structured second-level cache entries: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Second-level cache direct-reference entries: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Automatic eviction of collection cache: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JDBC batch size: 15
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JDBC batch updates for versioned data: enabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Scrollable result sets: enabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Wrap result sets: disabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JDBC3 getGeneratedKeys(): enabled
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JDBC result set fetch size: null
2025-05-15T13:03:56.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Connection release mode: ON_CLOSE
2025-05-15T13:03:56.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : Generate SQL with comments: disabled
2025-05-15T13:03:56.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JPA compliance - query : disabled
2025-05-15T13:03:56.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JPA compliance - closed-handling : disabled
2025-05-15T13:03:56.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JPA compliance - lists : disabled
2025-05-15T13:03:56.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.cfg.Settings               : JPA compliance - transactions : disabled
2025-05-15T13:03:56.142-04:00 DEBUG 26196 --- [spring-openai] [           main] .h.s.i.SessionFactoryServiceRegistryImpl : EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-15T13:03:56.143-04:00 DEBUG 26196 --- [spring-openai] [           main] .h.s.i.SessionFactoryServiceRegistryImpl : EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-15T13:03:56.155-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.SessionFactoryImpl  : Session factory constructed with filter configurations : {}
2025-05-15T13:03:56.155-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.SessionFactoryImpl  : Instantiating session factory with properties: {java.specification.version=21, sun.cpu.isalist=amd64, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=Cp1252, hibernate.dialect=org.hibernate.dialect.H2Dialect, java.class.path=E:\sisllccarlo\jinvidia-saas-reactcarlo\target\test-classes;E:\sisllccarlo\jinvidia-saas-reactcarlo\target\classes;C:\Users\javaugi\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\javaugi\.m2\repository\com\h2database\h2-mvstore\2.3.232\h2-mvstore-2.3.232.jar;C:\Users\javaugi\.m2\repository\org\hsqldb\hsqldb\2.7.3\hsqldb-2.7.3.jar;C:\Users\javaugi\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\javaugi\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb-reactive\3.4.5\spring-boot-starter-data-mongodb-reactive-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.5\spring-boot-starter-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\reactor-core\3.7.5\reactor-core-3.7.5.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-reactivestreams\5.2.1\mongodb-driver-reactivestreams-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson\5.2.1\bson-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-core\5.2.1\mongodb-driver-core-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson-record-codec\5.2.1\bson-record-codec-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-mongodb\4.4.5\spring-data-mongodb-4.4.5.jar;C:\Users\javaugi\.m2\repository\io\reactivex\rxjava2\rxjava\2.2.21\rxjava-2.2.21.jar;C:\Users\javaugi\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webflux\6.2.6\spring-webflux-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-core\6.2.6\spring-core-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jcl\6.2.6\spring-jcl-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-web\6.2.6\spring-web-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.4.5\spring-boot-starter-webflux-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.5\spring-boot-starter-json-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.4.5\spring-boot-starter-reactor-netty-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.2.5\reactor-netty-http-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-r2dbc\3.4.5\spring-boot-starter-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-r2dbc\3.4.5\spring-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-r2dbc\6.2.6\spring-r2dbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-spi\1.0.0.RELEASE\r2dbc-spi-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-pool\1.0.2.RELEASE\r2dbc-pool-1.0.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-pool\1.1.2\reactor-pool-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\postgresql\r2dbc-postgresql\1.0.7.RELEASE\r2dbc-postgresql-1.0.7.RELEASE.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\client\2.1\client-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\common\2.1\common-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\saslprep\1.1\saslprep-1.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\stringprep\1.1\stringprep-1.1.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.2.5\reactor-netty-core-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\dev\miku\r2dbc-mysql\0.8.2.RELEASE\r2dbc-mysql-0.8.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.2\reactor-extra-3.5.2.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty\1.2.5\reactor-netty-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\incubator\reactor-netty-incubator-quic\0.2.5\reactor-netty-incubator-quic-0.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-native-quic\0.0.71.Final\netty-incubator-codec-native-quic-0.0.71.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-classes-quic\0.0.71.Final\netty-incubator-codec-classes-quic-0.0.71.Final.jar;C:\Users\javaugi\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-h2\1.0.0.RELEASE\r2dbc-h2-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.5\spring-boot-starter-web-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webmvc\6.2.6\spring-webmvc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.4.5\spring-boot-starter-hateoas-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\hateoas\spring-hateoas\2.4.1\spring-hateoas-2.4.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\3.4.5\spring-boot-starter-data-rest-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-webmvc\4.4.5\spring-data-rest-webmvc-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-core\4.4.5\spring-data-rest-core-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\atteo\evo-inflector\1.3\evo-inflector-1.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.5\spring-boot-starter-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test\3.4.5\spring-boot-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.5\spring-boot-test-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\javaugi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\javaugi\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\javaugi\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\javaugi\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\javaugi\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-test\6.2.6\spring-test-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.5\spring-boot-starter-logging-3.4.5.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-batch\3.4.5\spring-boot-starter-batch-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.5\spring-boot-starter-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-core\5.2.2\spring-batch-core-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-infrastructure\5.2.2\spring-batch-infrastructure-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-core\1.14.6\micrometer-core-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\javaugi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-test\5.2.2\spring-batch-test-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.4.5\spring-boot-starter-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.4.5\spring-boot-actuator-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.4.5\spring-boot-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-observation\1.14.6\micrometer-observation-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-commons\1.14.6\micrometer-commons-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-jakarta9\1.14.6\micrometer-jakarta9-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jetty\3.4.5\spring-boot-starter-jetty-3.4.5.jar;C:\Users\javaugi\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-api\2.1.1\jakarta.websocket-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-client-api\2.1.1\jakarta.websocket-client-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlets\12.0.19\jetty-ee10-servlets-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-http\12.0.19\jetty-http-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-io\12.0.19\jetty-io-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-util\12.0.19\jetty-util-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-webapp\12.0.19\jetty-ee10-webapp-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-ee\12.0.19\jetty-ee-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-server\12.0.19\jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-session\12.0.19\jetty-session-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-xml\12.0.19\jetty-xml-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlet\12.0.19\jetty-ee10-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-security\12.0.19\jetty-security-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-server\12.0.19\jetty-ee10-websocket-jakarta-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-annotations\12.0.19\jetty-ee10-annotations-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-plus\12.0.19\jetty-ee10-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.0.1\jakarta.enterprise.cdi-api-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.0.1\jakarta.enterprise.lang-model-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.1.0\jakarta.interceptor-api-2.1.0.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-plus\12.0.19\jetty-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-commons\9.7.1\asm-commons-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-tree\9.7.1\asm-tree-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-client\12.0.19\jetty-ee10-websocket-jakarta-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-client\12.0.19\jetty-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-alpn-client\12.0.19\jetty-alpn-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-common\12.0.19\jetty-ee10-websocket-jakarta-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-client\12.0.19\jetty-websocket-core-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-servlet\12.0.19\jetty-ee10-websocket-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-server\12.0.19\jetty-websocket-core-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jetty-server\12.0.19\jetty-ee10-websocket-jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-api\12.0.19\jetty-websocket-jetty-api-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-common\12.0.19\jetty-websocket-jetty-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-common\12.0.19\jetty-websocket-core-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.5\spring-boot-starter-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aspects\6.2.6\spring-aspects-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.5\spring-boot-devtools-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot\3.4.5\spring-boot-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.5\spring-boot-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-orm\6.2.6\spring-orm-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-tx\6.2.6\spring-tx-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-core-jakarta\5.6.15.Final\hibernate-core-jakarta-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\javaugi\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\javaugi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\javaugi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\javaugi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.6.13.Final\hibernate-c3p0-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\javaugi\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\javaugi\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\javaugi\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\javaugi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\javaugi\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\javaugi\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\javaugi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\javaugi\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-ehcache\5.6.15.Final\hibernate-ehcache-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-core\6.6.13.Final\hibernate-core-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-beans\6.2.6\spring-beans-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jdbc\6.2.6\spring-jdbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jpa\3.4.5\spring-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-context\6.2.6\spring-context-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aop\6.2.6\spring-aop-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-commons\3.4.5\spring-data-commons-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jdbc\3.4.5\spring-data-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-relational\3.4.5\spring-data-relational-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-client\3.4.5\spring-boot-starter-oauth2-client-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-config\6.4.5\spring-security-config-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-core\6.4.5\spring-security-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-crypto\6.4.5\spring-security-crypto-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-client\6.4.5\spring-security-oauth2-client-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.4.5\spring-security-oauth2-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\oauth2-oidc-sdk\9.43.6\oauth2-oidc-sdk-9.43.6.jar;C:\Users\javaugi\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\content-type\2.2\content-type-2.2.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\lang-tag\1.7\lang-tag-1.7.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.4.5\spring-security-oauth2-jose-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\oauth\spring-security-oauth2\2.5.2.RELEASE\spring-security-oauth2-2.5.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-web\6.4.5\spring-security-web-6.4.5.jar;C:\Users\javaugi\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-taglibs\6.4.5\spring-security-taglibs-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-acl\6.4.5\spring-security-acl-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-expression\6.2.6\spring-expression-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-testcontainers\3.4.5\spring-boot-testcontainers-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\testcontainers\1.20.6\testcontainers-1.20.6.jar;C:\Users\javaugi\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\javaugi\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\javaugi\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\javaugi\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-api\3.4.1\docker-java-api-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.4.1\docker-java-transport-zerodep-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport\3.4.1\docker-java-transport-3.4.1.jar;C:\Users\javaugi\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\junit-jupiter\1.20.6\junit-jupiter-1.20.6.jar;, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=America/New_York, jakarta.persistence.sharedCache.mode=UNSPECIFIED, org.jboss.logging.provider=slf4j, java.vm.specification.version=21, os.name=Windows 10, APPLICATION_NAME=spring-openai, javax.persistence.validation.mode=AUTO, jakarta.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@492c8137, sun.java.launcher=SUN_STANDARD, user.country=US, sun.boot.library.path=C:\Program Files\Java\jdk-21\bin, sun.java.command=C:\Users\javaugi\AppData\Local\Temp\surefire14791843184240039808\surefirebooter-20250515130350032_3.jar C:\Users\javaugi\AppData\Local\Temp\surefire14791843184240039808 2025-05-15T13-03-49_879-jvmRun1 surefire-20250515130350032_1tmp surefire_0-20250515130350032_2tmp, javax.persistence.nonJtaDataSource=org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@492c8137, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, surefire.test.class.path=E:\sisllccarlo\jinvidia-saas-reactcarlo\target\test-classes;E:\sisllccarlo\jinvidia-saas-reactcarlo\target\classes;C:\Users\javaugi\.m2\repository\com\h2database\h2\2.3.232\h2-2.3.232.jar;C:\Users\javaugi\.m2\repository\com\h2database\h2-mvstore\2.3.232\h2-mvstore-2.3.232.jar;C:\Users\javaugi\.m2\repository\org\hsqldb\hsqldb\2.7.3\hsqldb-2.7.3.jar;C:\Users\javaugi\.m2\repository\com\mysql\mysql-connector-j\9.1.0\mysql-connector-j-9.1.0.jar;C:\Users\javaugi\.m2\repository\org\projectlombok\lombok\1.18.38\lombok-1.18.38.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb-reactive\3.4.5\spring-boot-starter-data-mongodb-reactive-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter\3.4.5\spring-boot-starter-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\yaml\snakeyaml\2.3\snakeyaml-2.3.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\reactor-core\3.7.5\reactor-core-3.7.5.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-reactivestreams\5.2.1\mongodb-driver-reactivestreams-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson\5.2.1\bson-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\mongodb-driver-core\5.2.1\mongodb-driver-core-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\mongodb\bson-record-codec\5.2.1\bson-record-codec-5.2.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-mongodb\4.4.5\spring-data-mongodb-4.4.5.jar;C:\Users\javaugi\.m2\repository\io\reactivex\rxjava2\rxjava\2.2.21\rxjava-2.2.21.jar;C:\Users\javaugi\.m2\repository\org\reactivestreams\reactive-streams\1.0.4\reactive-streams-1.0.4.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webflux\6.2.6\spring-webflux-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-core\6.2.6\spring-core-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jcl\6.2.6\spring-jcl-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-web\6.2.6\spring-web-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-webflux\3.4.5\spring-boot-starter-webflux-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.4.5\spring-boot-starter-json-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.18.3\jackson-databind-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.18.3\jackson-core-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.18.3\jackson-datatype-jdk8-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.18.3\jackson-datatype-jsr310-2.18.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.18.3\jackson-module-parameter-names-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-reactor-netty\3.4.5\spring-boot-starter-reactor-netty-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-http\1.2.5\reactor-netty-http-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http\4.1.119.Final\netty-codec-http-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-http2\4.1.119.Final\netty-codec-http2-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-r2dbc\3.4.5\spring-boot-starter-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-r2dbc\3.4.5\spring-data-r2dbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-r2dbc\6.2.6\spring-r2dbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-spi\1.0.0.RELEASE\r2dbc-spi-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-pool\1.0.2.RELEASE\r2dbc-pool-1.0.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-pool\1.1.2\reactor-pool-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\postgresql\r2dbc-postgresql\1.0.7.RELEASE\r2dbc-postgresql-1.0.7.RELEASE.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\client\2.1\client-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\scram\common\2.1\common-2.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\saslprep\1.1\saslprep-1.1.jar;C:\Users\javaugi\.m2\repository\com\ongres\stringprep\stringprep\1.1\stringprep-1.1.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty-core\1.2.5\reactor-netty-core-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler\4.1.119.Final\netty-handler-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-common\4.1.119.Final\netty-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver\4.1.119.Final\netty-resolver-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-buffer\4.1.119.Final\netty-buffer-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport\4.1.119.Final\netty-transport-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-unix-common\4.1.119.Final\netty-transport-native-unix-common-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec\4.1.119.Final\netty-codec-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-handler-proxy\4.1.119.Final\netty-handler-proxy-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-socks\4.1.119.Final\netty-codec-socks-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns\4.1.119.Final\netty-resolver-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-codec-dns\4.1.119.Final\netty-codec-dns-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-native-macos\4.1.119.Final\netty-resolver-dns-native-macos-4.1.119.Final-osx-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-resolver-dns-classes-macos\4.1.119.Final\netty-resolver-dns-classes-macos-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-native-epoll\4.1.119.Final\netty-transport-native-epoll-4.1.119.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\netty-transport-classes-epoll\4.1.119.Final\netty-transport-classes-epoll-4.1.119.Final.jar;C:\Users\javaugi\.m2\repository\dev\miku\r2dbc-mysql\0.8.2.RELEASE\r2dbc-mysql-0.8.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\addons\reactor-extra\3.5.2\reactor-extra-3.5.2.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\reactor-netty\1.2.5\reactor-netty-1.2.5.jar;C:\Users\javaugi\.m2\repository\io\projectreactor\netty\incubator\reactor-netty-incubator-quic\0.2.5\reactor-netty-incubator-quic-0.2.5.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-native-quic\0.0.71.Final\netty-incubator-codec-native-quic-0.0.71.Final-linux-x86_64.jar;C:\Users\javaugi\.m2\repository\io\netty\incubator\netty-incubator-codec-classes-quic\0.0.71.Final\netty-incubator-codec-classes-quic-0.0.71.Final.jar;C:\Users\javaugi\.m2\repository\org\slf4j\slf4j-api\2.0.17\slf4j-api-2.0.17.jar;C:\Users\javaugi\.m2\repository\io\r2dbc\r2dbc-h2\1.0.0.RELEASE\r2dbc-h2-1.0.0.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.4.5\spring-boot-starter-web-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-webmvc\6.2.6\spring-webmvc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-hateoas\3.4.5\spring-boot-starter-hateoas-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\hateoas\spring-hateoas\2.4.1\spring-hateoas-2.4.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\plugin\spring-plugin-core\3.0.0\spring-plugin-core-3.0.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-rest\3.4.5\spring-boot-starter-data-rest-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-webmvc\4.4.5\spring-data-rest-webmvc-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-rest-core\4.4.5\spring-data-rest-core-4.4.5.jar;C:\Users\javaugi\.m2\repository\org\atteo\evo-inflector\1.3\evo-inflector-1.3.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.18.3\jackson-annotations-2.18.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.4.5\spring-boot-starter-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test\3.4.5\spring-boot-test-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.4.5\spring-boot-test-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\com\jayway\jsonpath\json-path\2.9.0\json-path-2.9.0.jar;C:\Users\javaugi\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.2\jakarta.xml.bind-api-4.0.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\json-smart\2.5.2\json-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\net\minidev\accessors-smart\2.5.2\accessors-smart-2.5.2.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm\9.7.1\asm-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\assertj\assertj-core\3.26.3\assertj-core-3.26.3.jar;C:\Users\javaugi\.m2\repository\org\awaitility\awaitility\4.2.2\awaitility-4.2.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter\5.11.4\junit-jupiter-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.11.4\junit-jupiter-api-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\opentest4j\opentest4j\1.3.0\opentest4j-1.3.0.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-commons\1.11.4\junit-platform-commons-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.11.4\junit-jupiter-params-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.11.4\junit-jupiter-engine-5.11.4.jar;C:\Users\javaugi\.m2\repository\org\junit\platform\junit-platform-engine\1.11.4\junit-platform-engine-1.11.4.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-core\5.14.2\mockito-core-5.14.2.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar;C:\Users\javaugi\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\javaugi\.m2\repository\org\mockito\mockito-junit-jupiter\5.14.2\mockito-junit-jupiter-5.14.2.jar;C:\Users\javaugi\.m2\repository\org\skyscreamer\jsonassert\1.5.3\jsonassert-1.5.3.jar;C:\Users\javaugi\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-test\6.2.6\spring-test-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\xmlunit\xmlunit-core\2.10.0\xmlunit-core-2.10.0.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.4.5\spring-boot-starter-logging-3.4.5.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-classic\1.5.18\logback-classic-1.5.18.jar;C:\Users\javaugi\.m2\repository\ch\qos\logback\logback-core\1.5.18\logback-core-1.5.18.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.24.3\log4j-to-slf4j-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\apache\logging\log4j\log4j-api\2.24.3\log4j-api-2.24.3.jar;C:\Users\javaugi\.m2\repository\org\slf4j\jul-to-slf4j\2.0.17\jul-to-slf4j-2.0.17.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-batch\3.4.5\spring-boot-starter-batch-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jdbc\3.4.5\spring-boot-starter-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-core\5.2.2\spring-batch-core-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-infrastructure\5.2.2\spring-batch-infrastructure-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\retry\spring-retry\2.0.11\spring-retry-2.0.11.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-core\1.14.6\micrometer-core-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\hdrhistogram\HdrHistogram\2.2.2\HdrHistogram-2.2.2.jar;C:\Users\javaugi\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\batch\spring-batch-test\5.2.2\spring-batch-test-5.2.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.4.5\spring-boot-starter-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.4.5\spring-boot-actuator-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-actuator\3.4.5\spring-boot-actuator-3.4.5.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-observation\1.14.6\micrometer-observation-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-commons\1.14.6\micrometer-commons-1.14.6.jar;C:\Users\javaugi\.m2\repository\io\micrometer\micrometer-jakarta9\1.14.6\micrometer-jakarta9-1.14.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-jetty\3.4.5\spring-boot-starter-jetty-3.4.5.jar;C:\Users\javaugi\.m2\repository\jakarta\servlet\jakarta.servlet-api\6.0.0\jakarta.servlet-api-6.0.0.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-api\2.1.1\jakarta.websocket-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\jakarta\websocket\jakarta.websocket-client-api\2.1.1\jakarta.websocket-client-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.40\tomcat-embed-el-10.1.40.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlets\12.0.19\jetty-ee10-servlets-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-http\12.0.19\jetty-http-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-io\12.0.19\jetty-io-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-util\12.0.19\jetty-util-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-webapp\12.0.19\jetty-ee10-webapp-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-ee\12.0.19\jetty-ee-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-server\12.0.19\jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-session\12.0.19\jetty-session-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-xml\12.0.19\jetty-xml-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-servlet\12.0.19\jetty-ee10-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-security\12.0.19\jetty-security-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-server\12.0.19\jetty-ee10-websocket-jakarta-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-annotations\12.0.19\jetty-ee10-annotations-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\jetty-ee10-plus\12.0.19\jetty-ee10-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.cdi-api\4.0.1\jakarta.enterprise.cdi-api-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\enterprise\jakarta.enterprise.lang-model\4.0.1\jakarta.enterprise.lang-model-4.0.1.jar;C:\Users\javaugi\.m2\repository\jakarta\interceptor\jakarta.interceptor-api\2.1.0\jakarta.interceptor-api-2.1.0.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-plus\12.0.19\jetty-plus-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-commons\9.7.1\asm-commons-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\ow2\asm\asm-tree\9.7.1\asm-tree-9.7.1.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-client\12.0.19\jetty-ee10-websocket-jakarta-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-client\12.0.19\jetty-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\jetty-alpn-client\12.0.19\jetty-alpn-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jakarta-common\12.0.19\jetty-ee10-websocket-jakarta-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-client\12.0.19\jetty-websocket-core-client-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-servlet\12.0.19\jetty-ee10-websocket-servlet-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-server\12.0.19\jetty-websocket-core-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\ee10\websocket\jetty-ee10-websocket-jetty-server\12.0.19\jetty-ee10-websocket-jetty-server-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-api\12.0.19\jetty-websocket-jetty-api-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-jetty-common\12.0.19\jetty-websocket-jetty-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\eclipse\jetty\websocket\jetty-websocket-core-common\12.0.19\jetty-websocket-core-common-12.0.19.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-data-jpa\3.4.5\spring-boot-starter-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aspects\6.2.6\spring-aspects-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\aspectj\aspectjweaver\1.9.24\aspectjweaver-1.9.24.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-devtools\3.4.5\spring-boot-devtools-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot\3.4.5\spring-boot-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.4.5\spring-boot-autoconfigure-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-orm\6.2.6\spring-orm-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-tx\6.2.6\spring-tx-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-core-jakarta\5.6.15.Final\hibernate-core-jakarta-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\org\jboss\logging\jboss-logging\3.6.1.Final\jboss-logging-3.6.1.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy\1.15.11\byte-buddy-1.15.11.jar;C:\Users\javaugi\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\javaugi\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\javaugi\.m2\repository\com\fasterxml\classmate\1.7.0\classmate-1.7.0.jar;C:\Users\javaugi\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.3\jakarta.activation-api-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\dom4j\dom4j\2.1.3\dom4j-2.1.3.jar;C:\Users\javaugi\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.5\jaxb-runtime-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.5\jaxb-core-4.0.5.jar;C:\Users\javaugi\.m2\repository\org\eclipse\angus\angus-activation\2.0.2\angus-activation-2.0.2.jar;C:\Users\javaugi\.m2\repository\org\glassfish\jaxb\txw2\4.0.5\txw2-4.0.5.jar;C:\Users\javaugi\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-c3p0\6.6.13.Final\hibernate-c3p0-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\com\mchange\c3p0\0.9.5.5\c3p0-0.9.5.5.jar;C:\Users\javaugi\.m2\repository\com\mchange\mchange-commons-java\0.2.19\mchange-commons-java-0.2.19.jar;C:\Users\javaugi\.m2\repository\io\smallrye\jandex\3.2.0\jandex-3.2.0.jar;C:\Users\javaugi\.m2\repository\jakarta\validation\jakarta.validation-api\3.0.2\jakarta.validation-api-3.0.2.jar;C:\Users\javaugi\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\javaugi\.m2\repository\org\antlr\antlr4-runtime\4.13.0\antlr4-runtime-4.13.0.jar;C:\Users\javaugi\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\javaugi\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\javaugi\.m2\repository\com\zaxxer\HikariCP\5.1.0\HikariCP-5.1.0.jar;C:\Users\javaugi\.m2\repository\org\hibernate\validator\hibernate-validator\8.0.2.Final\hibernate-validator-8.0.2.Final.jar;C:\Users\javaugi\.m2\repository\org\hibernate\hibernate-ehcache\5.6.15.Final\hibernate-ehcache-5.6.15.Final.jar;C:\Users\javaugi\.m2\repository\net\sf\ehcache\ehcache\2.10.6\ehcache-2.10.6.jar;C:\Users\javaugi\.m2\repository\org\hibernate\orm\hibernate-core\6.6.13.Final\hibernate-core-6.6.13.Final.jar;C:\Users\javaugi\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-beans\6.2.6\spring-beans-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-jdbc\6.2.6\spring-jdbc-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jpa\3.4.5\spring-data-jpa-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-context\6.2.6\spring-context-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-aop\6.2.6\spring-aop-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-commons\3.4.5\spring-data-commons-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-jdbc\3.4.5\spring-data-jdbc-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\data\spring-data-relational\3.4.5\spring-data-relational-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-starter-oauth2-client\3.4.5\spring-boot-starter-oauth2-client-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-config\6.4.5\spring-security-config-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-core\6.4.5\spring-security-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-crypto\6.4.5\spring-security-crypto-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-client\6.4.5\spring-security-oauth2-client-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-core\6.4.5\spring-security-oauth2-core-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\oauth2-oidc-sdk\9.43.6\oauth2-oidc-sdk-9.43.6.jar;C:\Users\javaugi\.m2\repository\com\github\stephenc\jcip\jcip-annotations\1.0-1\jcip-annotations-1.0-1.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\content-type\2.2\content-type-2.2.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\lang-tag\1.7\lang-tag-1.7.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-oauth2-jose\6.4.5\spring-security-oauth2-jose-6.4.5.jar;C:\Users\javaugi\.m2\repository\com\nimbusds\nimbus-jose-jwt\9.37.3\nimbus-jose-jwt-9.37.3.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\oauth\spring-security-oauth2\2.5.2.RELEASE\spring-security-oauth2-2.5.2.RELEASE.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-web\6.4.5\spring-security-web-6.4.5.jar;C:\Users\javaugi\.m2\repository\commons-codec\commons-codec\1.17.2\commons-codec-1.17.2.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-taglibs\6.4.5\spring-security-taglibs-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\security\spring-security-acl\6.4.5\spring-security-acl-6.4.5.jar;C:\Users\javaugi\.m2\repository\org\springframework\spring-expression\6.2.6\spring-expression-6.2.6.jar;C:\Users\javaugi\.m2\repository\org\springframework\boot\spring-boot-testcontainers\3.4.5\spring-boot-testcontainers-3.4.5.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\testcontainers\1.20.6\testcontainers-1.20.6.jar;C:\Users\javaugi\.m2\repository\junit\junit\4.13.2\junit-4.13.2.jar;C:\Users\javaugi\.m2\repository\org\hamcrest\hamcrest-core\2.2\hamcrest-core-2.2.jar;C:\Users\javaugi\.m2\repository\org\apache\commons\commons-compress\1.24.0\commons-compress-1.24.0.jar;C:\Users\javaugi\.m2\repository\org\rnorth\duct-tape\duct-tape\1.0.8\duct-tape-1.0.8.jar;C:\Users\javaugi\.m2\repository\org\jetbrains\annotations\17.0.0\annotations-17.0.0.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-api\3.4.1\docker-java-api-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport-zerodep\3.4.1\docker-java-transport-zerodep-3.4.1.jar;C:\Users\javaugi\.m2\repository\com\github\docker-java\docker-java-transport\3.4.1\docker-java-transport-3.4.1.jar;C:\Users\javaugi\.m2\repository\net\java\dev\jna\jna\5.13.0\jna-5.13.0.jar;C:\Users\javaugi\.m2\repository\org\testcontainers\junit-jupiter\1.20.6\junit-jupiter-1.20.6.jar;, sun.cpu.endian=little, hibernate.cdi.extensions=true, user.home=C:\Users\javaugi, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2024-10-15, java.home=C:\Program Files\Java\jdk-21, file.separator=\, basedir=E:\sisllccarlo\jinvidia-saas-reactcarlo, java.vm.compressedOopsMode=Zero based, line.separator=
, hibernate.persistenceUnitName=default, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.headless=true, surefire.real.class.path=C:\Users\javaugi\AppData\Local\Temp\surefire14791843184240039808\surefirebooter-20250515130350032_3.jar, jakarta.persistence.validation.mode=AUTO, hibernate.hbm2ddl.auto=update, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=21.0.5+9-LTS-239, user.name=javaugi, javax.persistence.attribute-converters=com.jvidia.reactcloan.MapToJsonConverter@3359c3f6, stdout.encoding=Cp1252, path.separator=;, os.version=10.0, java.runtime.name=Java(TM) SE Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, localRepository=C:\Users\javaugi\.m2\repository, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\javaugi\AppData\Local\Temp\, java.version=21.0.5, user.dir=E:\sisllccarlo\jinvidia-saas-reactcarlo, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, PID=26196, sun.os.patch.level=, CONSOLE_LOG_CHARSET=UTF-8, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@7533923b, native.encoding=Cp1252, java.library.path=C:\Program Files\Java\jdk-21\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Users\javaugi\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\local\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\usr\bin;C:\Program Files\Git\mingw64\bin;C:\Program Files\Git\usr\bin;C:\Users\javaugi\bin;C:\Program Files\Common Files\Oracle\Java\javapath;E:\software\curl;C:\Program Files (x86)\Intel\iCLS Client;C:\Program Files\Intel\iCLS Client;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Microsoft\Web Platform Installer;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files (x86)\Common Files\lenovo\easyplussdk\bin;C:\Program Files (x86)\QuickTime\QTSystem;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\Program Files (x86)\GNU\GnuPG\pub;E:\software\uru;E:\software\sqlite;C:\ProgramData\chocolatey\bin;C:\Program Files (x86)\Yarn\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0;C:\WINDOWS\System32\OpenSSH;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\MariaDB 10.4;C:\Program Files\MariaDB 10.4\bin;E:\apache\apache-maven-3.9.9;E:\apache\apache-maven-3.9.9\bin;C:\Program Files\Java\jdk-21;C:\Program Files\Java\jdk-21\bin;C:\Program Files (x86)\NSIS\Bin;C:\Program Files\PuTTY;C:\Program Files\Git\cmd;C:\Program Files\nodejs;C:\Program Files\Docker\Docker\resources\bin;C:\Users\javaugi\AppData\Roaming\Python\Python37\Scripts;C:\Users\javaugi\AppData\Local\GitHubDesktop\bin;C:\Users\javaugi\AppData\Local\Yarn\bin;C:\Users\javaugi\AppData\Local\Microsoft\WindowsApps;C:\Users\javaugi\AppData\Roaming\npm;C:\Program Files\Git\usr\bin\vendor_perl;C:\Program Files\Git\usr\bin\core_perl;., stderr.encoding=Cp1252, java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=21.0.5+9-LTS-239, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, hibernate.connection.datasource=org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy@492c8137, java.class.version=65.0, LOGGED_APPLICATION_NAME=[spring-openai] }
2025-05-15T13:03:56.169-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ValidationXmlParser   : Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-15T13:03:56.169-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via TCCL
2025-05-15T13:03:56.169-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-15T13:03:56.169-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ValidationXmlParser   : No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-15T13:03:56.169-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.e.resolver.TraversableResolvers  : Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-15T13:03:56.169-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.e.resolver.TraversableResolvers  : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-15T13:03:56.170-04:00 DEBUG 26196 --- [spring-openai] [           main] .h.v.m.ResourceBundleMessageInterpolator : Loaded expression factory via original TCCL
2025-05-15T13:03:56.172-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-15T13:03:56.172-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-15T13:03:56.172-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-15T13:03:56.173-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-15T13:03:56.173-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-15T13:03:56.173-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-15T13:03:56.174-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Role] is safe
2025-05-15T13:03:56.174-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Role
2025-05-15T13:03:56.197-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Product] is safe
2025-05-15T13:03:56.197-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Product
2025-05-15T13:03:56.200-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.User] is safe
2025-05-15T13:03:56.200-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.204-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.UserAccount] is safe
2025-05-15T13:03:56.204-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.UserAccount
2025-05-15T13:03:56.207-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Account] is safe
2025-05-15T13:03:56.208-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Account
2025-05-15T13:03:56.210-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Client] is safe
2025-05-15T13:03:56.210-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Client
2025-05-15T13:03:56.214-04:00 DEBUG 26196 --- [spring-openai] [           main] .h.s.i.SessionFactoryServiceRegistryImpl : EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-15T13:03:56.215-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.secure.spi.JaccIntegrator    : Skipping JACC integration as it was not enabled
2025-05-15T13:03:56.218-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.type.EnumType              : Using ORDINAL-based conversion for Enum com.jvidia.reactcloan.entity.AccountType
2025-05-15T13:03:56.220-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.SessionFactoryImpl  : Instantiated session factory
2025-05-15T13:03:56.221-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.type.spi.TypeConfiguration$Scope     : Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@2ec156fb] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@78f35e39]
2025-05-15T13:03:56.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.Role#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.281-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.Role#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Role] is safe
2025-05-15T13:03:56.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Role
2025-05-15T13:03:56.438-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.Role#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.439-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.Role#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.443-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Product] is safe
2025-05-15T13:03:56.443-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Product
2025-05-15T13:03:56.461-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.User] is safe
2025-05-15T13:03:56.461-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.485-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.UserAccount#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.485-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.UserAccount#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.485-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.UserAccount] is safe
2025-05-15T13:03:56.485-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.UserAccount
2025-05-15T13:03:56.497-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.UserAccount#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.497-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.orm.bytecode.interceptor   : To-one property `com.jvidia.reactcloan.entity.UserAccount#user` was mapped with LAZY + NO_PROXY but the class was not enhanced
2025-05-15T13:03:56.498-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Account] is safe
2025-05-15T13:03:56.498-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Account
2025-05-15T13:03:56.507-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : Not known whether passed class name [com.jvidia.reactcloan.entity.Client] is safe
2025-05-15T13:03:56.507-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.boot.internal.ClassLoaderAccessImpl  : No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.jvidia.reactcloan.entity.Client
2025-05-15T13:03:56.525-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      : Static SQL for collection: com.jvidia.reactcloan.entity.User.userAccounts
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  Row insert: update UserAccount set user_id=? where id=?
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  Row update: update UserAccount set  where id=?
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  Row delete: update UserAccount set user_id=null where user_id=? and id=?
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  One-shot delete: update UserAccount set user_id=null where user_id=?
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      : Static SQL for collection: com.jvidia.reactcloan.entity.User.roles
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  Row insert: update Role set user_id=? where id=?
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  Row update: update Role set  where id=?
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  Row delete: update Role set user_id=null where user_id=? and id=?
2025-05-15T13:03:56.526-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.c.AbstractCollectionPersister      :  One-shot delete: update Role set user_id=null where user_id=?
2025-05-15T13:03:56.531-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.jvidia.reactcloan.entity.Role
2025-05-15T13:03:56.531-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from Role where id =?
2025-05-15T13:03:56.531-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select role_.id, role_.name as name2_3_, role_.user_id as user_id3_3_ from Role role_ where role_.id=?
2025-05-15T13:03:56.532-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into Role (name, user_id, id) values (?, ?, ?)
2025-05-15T13:03:56.532-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update Role set name=?, user_id=? where id=?
2025-05-15T13:03:56.532-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from Role where id=?
2025-05-15T13:03:56.532-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Identity insert: insert into Role (id, name, user_id) values (default, ?, ?)
2025-05-15T13:03:56.549-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@92775a3]
2025-05-15T13:03:56.550-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2025-05-15T13:03:56.550-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user
2025-05-15T13:03:56.553-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c056020]
2025-05-15T13:03:56.554-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.firstName
2025-05-15T13:03:56.554-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.lastName
2025-05-15T13:03:56.554-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.name
2025-05-15T13:03:56.554-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.password
2025-05-15T13:03:56.554-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.roles
2025-05-15T13:03:56.554-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : user.roles
2025-05-15T13:03:56.555-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userAccounts
2025-05-15T13:03:56.555-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@209d0037]
2025-05-15T13:03:56.556-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69e308e2]
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userAccounts.account
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userAccounts.accountBalance
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userAccounts.accountType
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userAccounts.cashBalance
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userAccounts.user
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : user.userAccounts.user
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userEmail
2025-05-15T13:03:56.557-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.username
2025-05-15T13:03:56.558-04:00 DEBUG 26196 --- [spring-openai] [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2025-05-15T13:03:56.567-04:00 DEBUG 26196 --- [spring-openai] [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2025-05-15T13:03:56.572-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.jvidia.reactcloan.entity.Role)
    - Returns
       - EntityReturnImpl(entity=com.jvidia.reactcloan.entity.Role, querySpaceUid=<gen:0>, path=com.jvidia.reactcloan.entity.Role)
          - EntityAttributeFetchImpl(entity=com.jvidia.reactcloan.entity.User, querySpaceUid=<gen:1>, path=com.jvidia.reactcloan.entity.Role.user)
             - CollectionAttributeFetchImpl(collection=com.jvidia.reactcloan.entity.User.userAccounts, querySpaceUid=<gen:2>, path=com.jvidia.reactcloan.entity.Role.user.userAccounts)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.jvidia.reactcloan.entity.UserAccount, querySpaceUid=<gen:3>, path=com.jvidia.reactcloan.entity.Role.user.userAccounts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jvidia.reactcloan.entity.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.jvidia.reactcloan.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(userAccounts)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.jvidia.reactcloan.entity.User.userAccounts)
                      - SQL table alias mapping - useraccoun2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id6_4_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_4_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.jvidia.reactcloan.entity.UserAccount)
                            - SQL table alias mapping - useraccoun2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_4_3_}

2025-05-15T13:03:56.573-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.jvidia.reactcloan.entity.Role [NONE]: select role0_.id as id1_3_0_, role0_.name as name2_3_0_, role0_.user_id as user_id3_3_0_, user1_.id as id1_5_1_, user1_.firstName as firstnam2_5_1_, user1_.lastName as lastname3_5_1_, user1_.name as name4_5_1_, user1_.password as password5_5_1_, user1_.userEmail as useremai6_5_1_, user1_.username as username7_5_1_, useraccoun2_.user_id as user_id6_4_2_, useraccoun2_.id as id1_4_2_, useraccoun2_.id as id1_4_3_, useraccoun2_.account as account2_4_3_, useraccoun2_.accountBalance as accountb3_4_3_, useraccoun2_.accountType as accountt4_4_3_, useraccoun2_.cashBalance as cashbala5_4_3_, useraccoun2_.user_id as user_id6_4_3_ from Role role0_ left outer join USERS user1_ on role0_.user_id=user1_.id left outer join UserAccount useraccoun2_ on user1_.id=useraccoun2_.user_id where role0_.id=?
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.jvidia.reactcloan.entity.Product
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from Product where id =?
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select product_.id, product_.description as descript2_2_, product_.name as name3_2_, product_.price as price4_2_, product_.quantity as quantity5_2_, product_.status as status6_2_ from Product product_ where product_.id=?
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into Product (description, name, price, quantity, status, id) values (?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update Product set description=?, name=?, price=?, quantity=?, status=? where id=?
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from Product where id=?
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Identity insert: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@395c21ee]
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : description
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : price
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : quantity
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : status
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.jvidia.reactcloan.entity.Product)
    - Returns
       - EntityReturnImpl(entity=com.jvidia.reactcloan.entity.Product, querySpaceUid=<gen:0>, path=com.jvidia.reactcloan.entity.Product)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jvidia.reactcloan.entity.Product)
          - SQL table alias mapping - product0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2025-05-15T13:03:56.574-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.jvidia.reactcloan.entity.Product [NONE]: select product0_.id as id1_2_0_, product0_.description as descript2_2_0_, product0_.name as name3_2_0_, product0_.price as price4_2_0_, product0_.quantity as quantity5_2_0_, product0_.status as status6_2_0_ from Product product0_ where product0_.id=?
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.jvidia.reactcloan.entity.User
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from USERS where id =?
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select user_.id, user_.firstName as firstnam2_5_, user_.lastName as lastname3_5_, user_.name as name4_5_, user_.password as password5_5_, user_.userEmail as useremai6_5_, user_.username as username7_5_ from USERS user_ where user_.id=?
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into USERS (firstName, lastName, name, password, userEmail, username, id) values (?, ?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update USERS set firstName=?, lastName=?, name=?, password=?, userEmail=?, username=? where id=?
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from USERS where id=?
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Identity insert: insert into USERS (id, firstName, lastName, name, password, userEmail, username) values (default, ?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@669e730d]
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : firstName
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : lastName
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : password
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : roles
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13b5598b]
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@141c66db]
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : roles.name
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : roles.user
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : roles.user
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : userAccounts
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@15af06f]
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@76876421]
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : userAccounts.account
2025-05-15T13:03:56.575-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : userAccounts.accountBalance
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : userAccounts.accountType
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : userAccounts.cashBalance
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : userAccounts.user
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : userAccounts.user
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : userEmail
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : username
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.jvidia.reactcloan.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.jvidia.reactcloan.entity.User, querySpaceUid=<gen:0>, path=com.jvidia.reactcloan.entity.User)
          - CollectionAttributeFetchImpl(collection=com.jvidia.reactcloan.entity.User.roles, querySpaceUid=<gen:1>, path=com.jvidia.reactcloan.entity.User.roles)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.jvidia.reactcloan.entity.Role, querySpaceUid=<gen:2>, path=com.jvidia.reactcloan.entity.User.roles.<elements>)
          - CollectionAttributeFetchImpl(collection=com.jvidia.reactcloan.entity.User.userAccounts, querySpaceUid=<gen:3>, path=com.jvidia.reactcloan.entity.User.userAccounts)
             - (collection element) CollectionFetchableElementEntityGraph(entity=com.jvidia.reactcloan.entity.UserAccount, querySpaceUid=<gen:4>, path=com.jvidia.reactcloan.entity.User.userAccounts.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jvidia.reactcloan.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {id1_5_0_}
          - JOIN (JoinDefinedByMetadata(roles)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=com.jvidia.reactcloan.entity.User.roles)
                - SQL table alias mapping - roles1_
                - alias suffix - 1_
                - suffixed key columns - {user_id3_3_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - id1_3_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.jvidia.reactcloan.entity.Role)
                      - SQL table alias mapping - roles1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_3_2_}
          - JOIN (JoinDefinedByMetadata(userAccounts)) : <gen:0> -> <gen:3>
             - CollectionQuerySpaceImpl(uid=<gen:3>, collection=com.jvidia.reactcloan.entity.User.userAccounts)
                - SQL table alias mapping - useraccoun2_
                - alias suffix - 3_
                - suffixed key columns - {user_id6_4_3_}
                - entity-element alias suffix - 4_
                - 4_entity-element suffixed key columns - id1_4_4_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:3> -> <gen:4>
                   - EntityQuerySpaceImpl(uid=<gen:4>, entity=com.jvidia.reactcloan.entity.UserAccount)
                      - SQL table alias mapping - useraccoun2_
                      - alias suffix - 4_
                      - suffixed key columns - {id1_4_4_}

2025-05-15T13:03:56.576-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.jvidia.reactcloan.entity.User [NONE]: select user0_.id as id1_5_0_, user0_.firstName as firstnam2_5_0_, user0_.lastName as lastname3_5_0_, user0_.name as name4_5_0_, user0_.password as password5_5_0_, user0_.userEmail as useremai6_5_0_, user0_.username as username7_5_0_, roles1_.user_id as user_id3_3_1_, roles1_.id as id1_3_1_, roles1_.id as id1_3_2_, roles1_.name as name2_3_2_, roles1_.user_id as user_id3_3_2_, useraccoun2_.user_id as user_id6_4_3_, useraccoun2_.id as id1_4_3_, useraccoun2_.id as id1_4_4_, useraccoun2_.account as account2_4_4_, useraccoun2_.accountBalance as accountb3_4_4_, useraccoun2_.accountType as accountt4_4_4_, useraccoun2_.cashBalance as cashbala5_4_4_, useraccoun2_.user_id as user_id6_4_4_ from USERS user0_ left outer join Role roles1_ on user0_.id=roles1_.user_id left outer join UserAccount useraccoun2_ on user0_.id=useraccoun2_.user_id where user0_.id=?
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.jvidia.reactcloan.entity.UserAccount
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from UserAccount where id =?
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select useraccoun_.id, useraccoun_.account as account2_4_, useraccoun_.accountBalance as accountb3_4_, useraccoun_.accountType as accountt4_4_, useraccoun_.cashBalance as cashbala5_4_, useraccoun_.user_id as user_id6_4_ from UserAccount useraccoun_ where useraccoun_.id=?
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into UserAccount (account, accountBalance, accountType, cashBalance, user_id, id) values (?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update UserAccount set account=?, accountBalance=?, accountType=?, cashBalance=?, user_id=? where id=?
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from UserAccount where id=?
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Identity insert: insert into UserAccount (id, account, accountBalance, accountType, cashBalance, user_id) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@363e2009]
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : account
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : accountBalance
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : accountType
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : cashBalance
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user
2025-05-15T13:03:56.577-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3615f8d9]
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.firstName
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.lastName
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.name
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.password
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.roles
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a59500b]
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e3c0627]
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.roles.name
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.roles.user
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : user.roles.user
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userAccounts
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : user.userAccounts
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.userEmail
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user.username
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2025-05-15T13:03:56.578-04:00 DEBUG 26196 --- [spring-openai] [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.jvidia.reactcloan.entity.UserAccount)
    - Returns
       - EntityReturnImpl(entity=com.jvidia.reactcloan.entity.UserAccount, querySpaceUid=<gen:0>, path=com.jvidia.reactcloan.entity.UserAccount)
          - EntityAttributeFetchImpl(entity=com.jvidia.reactcloan.entity.User, querySpaceUid=<gen:1>, path=com.jvidia.reactcloan.entity.UserAccount.user)
             - CollectionAttributeFetchImpl(collection=com.jvidia.reactcloan.entity.User.roles, querySpaceUid=<gen:2>, path=com.jvidia.reactcloan.entity.UserAccount.user.roles)
                - (collection element) CollectionFetchableElementEntityGraph(entity=com.jvidia.reactcloan.entity.Role, querySpaceUid=<gen:3>, path=com.jvidia.reactcloan.entity.UserAccount.user.roles.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jvidia.reactcloan.entity.UserAccount)
          - SQL table alias mapping - useraccoun0_
          - alias suffix - 0_
          - suffixed key columns - {id1_4_0_}
          - JOIN (JoinDefinedByMetadata(user)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.jvidia.reactcloan.entity.User)
                - SQL table alias mapping - user1_
                - alias suffix - 1_
                - suffixed key columns - {id1_5_1_}
                - JOIN (JoinDefinedByMetadata(roles)) : <gen:1> -> <gen:2>
                   - CollectionQuerySpaceImpl(uid=<gen:2>, collection=com.jvidia.reactcloan.entity.User.roles)
                      - SQL table alias mapping - roles2_
                      - alias suffix - 2_
                      - suffixed key columns - {user_id3_3_2_}
                      - entity-element alias suffix - 3_
                      - 3_entity-element suffixed key columns - id1_3_3_
                      - JOIN (JoinDefinedByMetadata(elements)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.jvidia.reactcloan.entity.Role)
                            - SQL table alias mapping - roles2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_3_3_}

2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.jvidia.reactcloan.entity.UserAccount [NONE]: select useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_, user1_.id as id1_5_1_, user1_.firstName as firstnam2_5_1_, user1_.lastName as lastname3_5_1_, user1_.name as name4_5_1_, user1_.password as password5_5_1_, user1_.userEmail as useremai6_5_1_, user1_.username as username7_5_1_, roles2_.user_id as user_id3_3_2_, roles2_.id as id1_3_2_, roles2_.id as id1_3_3_, roles2_.name as name2_3_3_, roles2_.user_id as user_id3_3_3_ from UserAccount useraccoun0_ left outer join USERS user1_ on useraccoun0_.user_id=user1_.id left outer join Role roles2_ on user1_.id=roles2_.user_id where useraccoun0_.id=?
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.jvidia.reactcloan.entity.Account
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from Account where id =?
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select account_.id, account_.accountType as accountt2_0_, account_.balance as balance3_0_ from Account account_ where account_.id=?
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into Account (accountType, balance, id) values (?, ?, ?)
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update Account set accountType=?, balance=? where id=?
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from Account where id=?
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Identity insert: insert into Account (id, accountType, balance) values (default, ?, ?)
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5aec151b]
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : accountType
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : balance
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.jvidia.reactcloan.entity.Account)
    - Returns
       - EntityReturnImpl(entity=com.jvidia.reactcloan.entity.Account, querySpaceUid=<gen:0>, path=com.jvidia.reactcloan.entity.Account)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jvidia.reactcloan.entity.Account)
          - SQL table alias mapping - account0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2025-05-15T13:03:56.579-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.jvidia.reactcloan.entity.Account [NONE]: select account0_.id as id1_0_0_, account0_.accountType as accountt2_0_0_, account0_.balance as balance3_0_0_ from Account account0_ where account0_.id=?
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.jvidia.reactcloan.entity.Client
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from Client where id =?
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select client_.id, client_.email as email2_1_, client_.name as name3_1_ from Client client_ where client_.id=?
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into Client (email, name, id) values (?, ?, ?)
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update Client set email=?, name=? where id=?
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from Client where id=?
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.entity.AbstractEntityPersister     :  Identity insert: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b9817b]
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.jvidia.reactcloan.entity.Client)
    - Returns
       - EntityReturnImpl(entity=com.jvidia.reactcloan.entity.Client, querySpaceUid=<gen:0>, path=com.jvidia.reactcloan.entity.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.jvidia.reactcloan.entity.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2025-05-15T13:03:56.580-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.jvidia.reactcloan.entity.Client [NONE]: select client0_.id as id1_1_0_, client0_.email as email2_1_0_, client0_.name as name3_1_0_ from Client client0_ where client0_.id=?
2025-05-15T13:03:56.588-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.588-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.588-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.588-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.588-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.589-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?, ?, ?)
2025-05-15T13:03:56.589-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?, ?)
2025-05-15T13:03:56.589-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?, ?)
2025-05-15T13:03:56.589-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?, ?)
2025-05-15T13:03:56.589-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id in (?, ?)
2025-05-15T13:03:56.589-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.loader.collection.OneToManyLoader    : Static select for one-to-many com.jvidia.reactcloan.entity.User.userAccounts: select useraccoun0_.user_id as user_id6_4_1_, useraccoun0_.id as id1_4_1_, useraccoun0_.id as id1_4_0_, useraccoun0_.account as account2_4_0_, useraccoun0_.accountBalance as accountb3_4_0_, useraccoun0_.accountType as accountt4_4_0_, useraccoun0_.cashBalance as cashbala5_4_0_, useraccoun0_.user_id as user_id6_4_0_ from UserAccount useraccoun0_ where useraccoun0_.user_id=?
2025-05-15T13:03:56.592-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@578781f7]
2025-05-15T13:03:56.592-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bbd944e]
2025-05-15T13:03:56.592-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2025-05-15T13:03:56.592-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : user
2025-05-15T13:03:56.592-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : user
2025-05-15T13:03:56.592-04:00 DEBUG 26196 --- [spring-openai] [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2025-05-15T13:03:56.594-04:00 DEBUG 26196 --- [spring-openai] [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2025-05-15T13:03:56.594-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(collection=com.jvidia.reactcloan.entity.User.roles)
    - Returns
       - CollectionReturnImpl(collection=com.jvidia.reactcloan.entity.User.roles, querySpaceUid=<gen:0>, path=[com.jvidia.reactcloan.entity.User.roles])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.jvidia.reactcloan.entity.Role, querySpaceUid=<gen:1>, path=[com.jvidia.reactcloan.entity.User.roles].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.jvidia.reactcloan.entity.User.roles)
          - SQL table alias mapping - roles0_
          - alias suffix - 0_
          - suffixed key columns - {user_id3_3_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.jvidia.reactcloan.entity.Role)
                - SQL table alias mapping - roles0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}

2025-05-15T13:03:56.594-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.l.collection.plan.CollectionLoader   : Static select for collection com.jvidia.reactcloan.entity.User.roles: select roles0_.user_id as user_id3_3_0_, roles0_.id as id1_3_0_, roles0_.id as id1_3_1_, roles0_.name as name2_3_1_, roles0_.user_id as user_id3_3_1_ from Role roles0_ where roles0_.user_id=?
2025-05-15T13:03:56.672-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : create table Account (id bigint generated by default as identity, accountType varchar(255), balance double not null, primary key (id))
Hibernate: create table Account (id bigint generated by default as identity, accountType varchar(255), balance double not null, primary key (id))
2025-05-15T13:03:56.680-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : create table Client (id bigint generated by default as identity, email varchar(255), name varchar(255), primary key (id))
Hibernate: create table Client (id bigint generated by default as identity, email varchar(255), name varchar(255), primary key (id))
2025-05-15T13:03:56.681-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : create table Product (id bigint generated by default as identity, description varchar(255), name varchar(255), price numeric(19,2), quantity integer not null, status boolean not null, primary key (id))
Hibernate: create table Product (id bigint generated by default as identity, description varchar(255), name varchar(255), price numeric(19,2), quantity integer not null, status boolean not null, primary key (id))
2025-05-15T13:03:56.683-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : create table Role (id bigint generated by default as identity, name varchar(255), user_id bigint, primary key (id))
Hibernate: create table Role (id bigint generated by default as identity, name varchar(255), user_id bigint, primary key (id))
2025-05-15T13:03:56.684-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : create table UserAccount (id bigint generated by default as identity, account varchar(255), accountBalance numeric(19,2), accountType integer, cashBalance numeric(19,2), user_id bigint, primary key (id))
Hibernate: create table UserAccount (id bigint generated by default as identity, account varchar(255), accountBalance numeric(19,2), accountType integer, cashBalance numeric(19,2), user_id bigint, primary key (id))
2025-05-15T13:03:56.685-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : create table USERS (id bigint generated by default as identity, firstName varchar(255), lastName varchar(255), name varchar(255), password varchar(255), userEmail varchar(255), username varchar(255), primary key (id))
Hibernate: create table USERS (id bigint generated by default as identity, firstName varchar(255), lastName varchar(255), name varchar(255), password varchar(255), userEmail varchar(255), username varchar(255), primary key (id))
2025-05-15T13:03:56.686-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : alter table Role add constraint FKbcxji3ciphoshnpxcx9vahrk1 foreign key (user_id) references USERS
Hibernate: alter table Role add constraint FKbcxji3ciphoshnpxcx9vahrk1 foreign key (user_id) references USERS
2025-05-15T13:03:56.694-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : alter table UserAccount add constraint FKfgkvcgpbicg2hc6p46hduwsly foreign key (user_id) references USERS
Hibernate: alter table UserAccount add constraint FKfgkvcgpbicg2hc6p46hduwsly foreign key (user_id) references USERS
2025-05-15T13:03:56.695-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : No JtaPlatform was specified, checking resolver
2025-05-15T13:03:56.696-04:00 DEBUG 26196 --- [spring-openai] [           main] h.e.t.j.p.i.JtaPlatformResolverInitiator : No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2025-05-15T13:03:56.701-04:00 DEBUG 26196 --- [spring-openai] [           main] .h.e.t.j.p.i.StandardJtaPlatformResolver : Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-15T13:03:56.701-04:00  INFO 26196 --- [spring-openai] [           main] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2025-05-15T13:03:56.705-04:00 DEBUG 26196 --- [spring-openai] [           main] .h.s.i.SessionFactoryServiceRegistryImpl : EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2025-05-15T13:03:56.713-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5d3d5242
2025-05-15T13:03:56.717-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.query.spi.NamedQueryRepository       : Checking 0 named HQL queries
2025-05-15T13:03:56.718-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.query.spi.NamedQueryRepository       : Checking 0 named SQL queries
2025-05-15T13:03:56.719-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.internal.SessionFactoryRegistry      : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@3054cdd3
2025-05-15T13:03:56.719-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.internal.SessionFactoryRegistry      : Registering SessionFactory: 71f08d68-4d91-4c8b-a8cc-8ab57155811b (<unnamed>)
2025-05-15T13:03:56.719-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.internal.SessionFactoryRegistry      : Not binding SessionFactory to JNDI, no JNDI name configured
2025-05-15T13:03:56.719-04:00  INFO 26196 --- [spring-openai] [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-05-15T13:03:56.938-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:56.998-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=false]
2025-05-15T13:03:57.005-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:57.104-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:57.177-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:57.179-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:57.202-04:00  INFO 26196 --- [spring-openai] [           main] o.s.d.j.r.query.QueryEnhancerFactory     : Hibernate is in classpath; If applicable, HQL parser will be used.
2025-05-15T13:03:57.555-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.jvidia.reactcloan.entity.Client c WHERE c.name = (:name)
2025-05-15T13:03:57.560-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.569-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'jvidia'
    |  |     |  |  |  \-[IDENT] Node: 'reactcloan'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2025-05-15T13:03:57.596-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2025-05-15T13:03:57.607-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.jvidia.reactcloan.entity.Client (c) -> client0_
2025-05-15T13:03:57.608-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> client0_.id
2025-05-15T13:03:57.610-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> client0_.id
2025-05-15T13:03:57.611-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.DotNode        : getDataType() : name -> org.hibernate.type.StringType@35c00c
2025-05-15T13:03:57.612-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.name -> client0_.name
2025-05-15T13:03:57.614-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2025-05-15T13:03:57.614-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} Client client0_ ) ( WHERE ( = ( client0_.name client0_.id name ) ? ) ) )
2025-05-15T13:03:57.620-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [Client]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Client)
    |  | originalText: c
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Client)
          | path: c.name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Client)
          |  | originalText: c
          |  \-IdentNode
          |    persister: null
          |    originalText: name
          \-ParameterNode

2025-05-15T13:03:57.623-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [Client client0_]
2025-05-15T13:03:57.623-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2025-05-15T13:03:57.624-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_1_' {alias=c, className=com.jvidia.reactcloan.entity.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.email as email2_1_, client0_.name as name3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.jvidia.reactcloan.entity.Client}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=c.name,tableAlias=client0_,className=com.jvidia.reactcloan.entity.Client,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=c, className=com.jvidia.reactcloan.entity.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@35c00c}

2025-05-15T13:03:57.624-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.629-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.jvidia.reactcloan.entity.Client c WHERE c.name = (:name)
2025-05-15T13:03:57.629-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select client0_.id as id1_1_, client0_.email as email2_1_, client0_.name as name3_1_ from Client client0_ where client0_.name=?
2025-05-15T13:03:57.629-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.636-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:57.636-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:57.638-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT c FROM com.jvidia.reactcloan.entity.Client c WHERE c.email = (:email)
2025-05-15T13:03:57.639-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'jvidia'
    |  |     |  |  |  \-[IDENT] Node: 'reactcloan'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Client'
    |  |     \-[ALIAS] Node: 'c'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'c'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'c'
          |  \-[IDENT] Node: 'email'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'email'

2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.jvidia.reactcloan.entity.Client (c) -> client0_
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> client0_.id
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c -> client0_.id
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.DotNode        : getDataType() : email -> org.hibernate.type.StringType@35c00c
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : c.email -> client0_.email
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} Client client0_ ) ( WHERE ( = ( client0_.email client0_.id email ) ? ) ) )
2025-05-15T13:03:57.640-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [Client]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Client)
    |  | originalText: c
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Client)
          | path: c.email
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Client)
          |  | originalText: c
          |  \-IdentNode
          |    persister: null
          |    originalText: email
          \-ParameterNode

2025-05-15T13:03:57.641-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [Client client0_]
2025-05-15T13:03:57.641-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2025-05-15T13:03:57.641-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_1_' {alias=c, className=com.jvidia.reactcloan.entity.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.email as email2_1_, client0_.name as name3_1_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[c], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=c,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.jvidia.reactcloan.entity.Client}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'client0_.email' {propertyName=email,dereferenceType=PRIMITIVE,getPropertyPath=email,path=c.email,tableAlias=client0_,className=com.jvidia.reactcloan.entity.Client,classAlias=c}
          |  +-[ALIAS_REF] IdentNode: 'client0_.id' {alias=c, className=com.jvidia.reactcloan.entity.Client, tableAlias=client0_}
          |  \-[IDENT] IdentNode: 'email' {originalText=email}
          \-[NAMED_PARAM] ParameterNode: '?' {name=email, expectedType=org.hibernate.type.StringType@35c00c}

2025-05-15T13:03:57.641-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.641-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT c FROM com.jvidia.reactcloan.entity.Client c WHERE c.email = (:email)
2025-05-15T13:03:57.641-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select client0_.id as id1_1_, client0_.email as email2_1_, client0_.name as name3_1_ from Client client0_ where client0_.email=?
2025-05-15T13:03:57.641-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.673-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:57.677-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:57.680-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:57.680-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:57.682-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT p FROM com.jvidia.reactcloan.entity.Product p  WHERE p.name= (:name)
2025-05-15T13:03:57.682-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.682-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'jvidia'
    |  |     |  |  |  \-[IDENT] Node: 'reactcloan'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'Product'
    |  |     \-[ALIAS] Node: 'p'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'p'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'p'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2025-05-15T13:03:57.682-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2025-05-15T13:03:57.682-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.jvidia.reactcloan.entity.Product (p) -> product0_
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p -> product0_.id
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p -> product0_.id
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.DotNode        : getDataType() : name -> org.hibernate.type.StringType@35c00c
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p.name -> product0_.name
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} product0_.id ) ( FromClause{level=1} Product product0_ ) ( WHERE ( = ( product0_.name product0_.id name ) ? ) ) )
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [Product]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Product)
    |  | originalText: p
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Product)
          | path: p.name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Product)
          |  | originalText: p
          |  \-IdentNode
          |    persister: null
          |    originalText: name
          \-ParameterNode

2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [Product product0_]
2025-05-15T13:03:57.683-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2025-05-15T13:03:57.684-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.id as id1_2_' {alias=p, className=com.jvidia.reactcloan.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.description as descript2_2_, product0_.name as name3_2_, product0_.price as price4_2_, product0_.quantity as quantity5_2_, product0_.status as status6_2_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=Product,tableAlias=product0_,origin=null,columns={,className=com.jvidia.reactcloan.entity.Product}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'product0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=p.name,tableAlias=product0_,className=com.jvidia.reactcloan.entity.Product,classAlias=p}
          |  +-[ALIAS_REF] IdentNode: 'product0_.id' {alias=p, className=com.jvidia.reactcloan.entity.Product, tableAlias=product0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@35c00c}

2025-05-15T13:03:57.684-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.684-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT p FROM com.jvidia.reactcloan.entity.Product p  WHERE p.name= (:name)
2025-05-15T13:03:57.684-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select product0_.id as id1_2_, product0_.description as descript2_2_, product0_.name as name3_2_, product0_.price as price4_2_, product0_.quantity as quantity5_2_, product0_.status as status6_2_ from Product product0_ where product0_.name=?
2025-05-15T13:03:57.684-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:57.750-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Creating new transaction with name [com.jvidia.reactcloan.service.ProductServiceImpl.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-15T13:03:57.751-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Opened new EntityManager [SessionImpl(1211131239<open>)] for JPA transaction
2025-05-15T13:03:57.753-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:57.753-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : begin
2025-05-15T13:03:57.755-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6c152246]
2025-05-15T13:03:57.759-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Found thread-bound EntityManager [SessionImpl(1211131239<open>)] for JPA transaction
2025-05-15T13:03:57.759-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Participating in existing transaction
2025-05-15T13:03:57.764-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.784-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.792-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.800-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 1
2025-05-15T13:03:57.800-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.805-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.805-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.806-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.806-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 2
2025-05-15T13:03:57.806-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 3
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.807-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 4
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 5
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.808-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 6
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 7
2025-05-15T13:03:57.809-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 8
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 9
2025-05-15T13:03:57.810-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 10
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 11
2025-05-15T13:03:57.811-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 12
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 13
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.812-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.813-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.813-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.813-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 14
2025-05-15T13:03:57.813-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.813-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.813-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.813-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 15
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 16
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.814-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 17
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 18
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.815-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 19
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 20
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.816-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 21
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 22
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.817-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 23
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 24
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.818-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 25
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 26
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.819-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 27
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 28
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.820-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.821-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.821-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.821-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 29
2025-05-15T13:03:57.821-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.821-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.822-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.822-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.822-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 30
2025-05-15T13:03:57.822-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.822-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.822-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.822-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.823-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 31
2025-05-15T13:03:57.823-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.823-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.823-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.823-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.823-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 32
2025-05-15T13:03:57.824-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.824-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.824-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.824-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 33
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 34
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.825-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 35
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 36
2025-05-15T13:03:57.826-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 37
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.827-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.828-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 38
2025-05-15T13:03:57.828-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.828-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.828-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.828-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.829-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 39
2025-05-15T13:03:57.829-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.829-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.829-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.829-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.829-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 40
2025-05-15T13:03:57.829-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.830-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.830-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.830-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.830-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 41
2025-05-15T13:03:57.830-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.830-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.830-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.831-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.831-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 42
2025-05-15T13:03:57.831-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.831-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.831-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.831-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.832-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 43
2025-05-15T13:03:57.832-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.832-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.832-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.832-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.833-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 44
2025-05-15T13:03:57.833-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.833-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.833-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.833-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.833-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 45
2025-05-15T13:03:57.833-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.834-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.834-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.834-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.834-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 46
2025-05-15T13:03:57.834-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.835-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.835-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.835-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.835-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 47
2025-05-15T13:03:57.835-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.835-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.835-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.836-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.836-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 48
2025-05-15T13:03:57.836-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.836-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.836-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.837-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.838-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 49
2025-05-15T13:03:57.838-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.838-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.838-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.838-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.839-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 50
2025-05-15T13:03:57.839-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.839-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.839-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.839-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.840-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 51
2025-05-15T13:03:57.840-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.840-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.840-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.840-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 52
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 53
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.841-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.842-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.842-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.842-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 54
2025-05-15T13:03:57.842-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.842-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.842-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.842-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 55
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 56
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.843-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.844-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.844-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 57
2025-05-15T13:03:57.844-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.844-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.844-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.844-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 58
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 59
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.845-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.846-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 60
2025-05-15T13:03:57.846-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.846-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.846-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.846-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.846-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 61
2025-05-15T13:03:57.846-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.847-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.847-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.847-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.847-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 62
2025-05-15T13:03:57.847-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.847-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.847-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.848-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.848-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 63
2025-05-15T13:03:57.848-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.848-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.848-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.849-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.849-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 64
2025-05-15T13:03:57.849-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.849-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.849-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.850-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.850-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 65
2025-05-15T13:03:57.850-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.850-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.851-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.851-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.851-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 66
2025-05-15T13:03:57.851-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.851-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.852-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.852-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.852-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 67
2025-05-15T13:03:57.852-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.852-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.852-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.853-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.853-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 68
2025-05-15T13:03:57.853-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.853-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.853-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.854-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.854-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 69
2025-05-15T13:03:57.854-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.854-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.854-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.855-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.855-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 70
2025-05-15T13:03:57.855-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.855-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.855-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.855-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.856-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 71
2025-05-15T13:03:57.856-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.856-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.856-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.856-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.857-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 72
2025-05-15T13:03:57.857-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.857-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.857-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.857-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.858-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 73
2025-05-15T13:03:57.858-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.858-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.858-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.858-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.859-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 74
2025-05-15T13:03:57.859-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.859-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.859-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.859-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.860-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 75
2025-05-15T13:03:57.860-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.860-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.860-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.860-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.861-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 76
2025-05-15T13:03:57.861-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.861-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.861-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.861-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.862-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 77
2025-05-15T13:03:57.862-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.862-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.862-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.862-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.863-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 78
2025-05-15T13:03:57.863-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.863-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.863-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.863-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 79
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 80
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.864-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 81
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 82
2025-05-15T13:03:57.865-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.866-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.866-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.866-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.867-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 83
2025-05-15T13:03:57.867-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.867-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.867-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.867-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.868-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 84
2025-05-15T13:03:57.868-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.868-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.868-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.868-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.868-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 85
2025-05-15T13:03:57.868-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.869-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.869-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.869-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.869-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 86
2025-05-15T13:03:57.869-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.869-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.870-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.870-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.870-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 87
2025-05-15T13:03:57.870-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.871-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.871-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.871-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.871-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 88
2025-05-15T13:03:57.871-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.872-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.872-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.872-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.872-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 89
2025-05-15T13:03:57.872-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.872-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.872-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.873-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.873-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 90
2025-05-15T13:03:57.873-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.873-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.873-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.873-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.874-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 91
2025-05-15T13:03:57.874-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.874-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.874-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.874-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.875-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 92
2025-05-15T13:03:57.875-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.875-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.875-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.875-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.875-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 93
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 94
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.876-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 95
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 96
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.877-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.878-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 97
2025-05-15T13:03:57.878-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.878-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.878-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.878-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 98
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 99
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:57.879-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
Hibernate: insert into Product (id, description, name, price, quantity, status) values (default, ?, ?, ?, ?, ?)
2025-05-15T13:03:57.880-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 100
2025-05-15T13:03:57.880-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.009-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Initiating transaction commit
2025-05-15T13:03:58.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Committing JPA transaction on EntityManager [SessionImpl(1211131239<open>)]
2025-05-15T13:03:58.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : committing
2025-05-15T13:03:58.010-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Processing flush-time cascades
2025-05-15T13:03:58.013-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Dirty checking collections
2025-05-15T13:03:58.022-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 insertions, 0 updates, 0 deletions to 100 objects
2025-05-15T13:03:58.022-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-05-15T13:03:58.023-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : Listing entities:
2025-05-15T13:03:58.023-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=5, price=67.8909664846940046345480368472635746002197265625, name=Aerosol Cheese, description=DialUp, id=81, status=true}
2025-05-15T13:03:58.023-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=6, price=28.390318758027976997482255683280527591705322265625, name=Demo Lotion, description=Accruex, id=82, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=14, price=81.3146931160672323812832473777234554290771484375, name=DialUp, description=Data Basket, id=79, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=9, price=1.894906712413091387503527585067786276340484619140625, name=Demo Lotion, description=AirHead, id=80, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=19, price=58.6016908094348565327891265042126178741455078125, name=Abundance, description=Demo Lotion, id=77, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=1, price=29.41359752154135520640920731239020824432373046875, name=Callflex, description=Bag of Scones, id=78, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=8, price=25.468076827848761922723497264087200164794921875, name=Demo Lotion, description=Deal Light, id=75, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=14, price=24.5957579158813217645729309879243373870849609375, name=Bum Bait, description=Adornica, id=76, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=17, price=40.0447225930920325254191993735730648040771484375, name=DialUp, description=Data Basket, id=89, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=3, price=61.51277740381277681080973707139492034912109375, name=Aerosol Cheese, description=Airborne Pickle, id=90, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=16, price=77.1452958116265250509968609549105167388916015625, name=Callflex, description=Acclimaze, id=87, status=true}
2025-05-15T13:03:58.024-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=19, price=60.15296257811640856516532949171960353851318359375, name=Aerosol Cheese, description=Deal Light, id=88, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=13, price=68.0761496014412870181331527419388294219970703125, name=Diamond Sky, description=Accruex, id=85, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=11, price=50.3522708909133172028305125422775745391845703125, name=Apple Cheeks, description=Aftertizer, id=86, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=10, price=30.001073557422085258394872653298079967498779296875, name=Demo Lotion, description=Abundance, id=83, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=4, price=42.37363209614204606623388826847076416015625, name=Aerosol Cheese, description=Brush n Flush, id=84, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=13, price=7.888766660000346320202879724092781543731689453125, name=Brush n Flush, description=Abundance, id=97, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=15, price=38.151281157673423649612232111394405364990234375, name=Baby Donuts, description=Botox Barbie, id=98, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=11, price=46.126207693416262145547079853713512420654296875, name=Demo Lotion, description=Brand Dandy, id=95, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=15, price=78.0811525618785395863596932031214237213134765625, name=Develaport, description=Bath and Relax, id=96, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=6, price=24.871823777422964241168301668949425220489501953125, name=Bag of Scones, description=Demo Lotion, id=93, status=true}
2025-05-15T13:03:58.025-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : More......
2025-05-15T13:03:58.029-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Closing JPA EntityManager [SessionImpl(1211131239<open>)] after transaction
2025-05-15T13:03:58.030-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Creating new transaction with name [com.jvidia.reactcloan.service.ProductServiceImpl.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-15T13:03:58.030-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Opened new EntityManager [SessionImpl(1949485879<open>)] for JPA transaction
2025-05-15T13:03:58.030-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:58.030-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : begin
2025-05-15T13:03:58.030-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@6d985720]
2025-05-15T13:03:58.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Found thread-bound EntityManager [SessionImpl(1949485879<open>)] for JPA transaction
2025-05-15T13:03:58.032-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Participating in existing transaction
2025-05-15T13:03:58.064-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.q.c.internal.CriteriaQueryImpl       : Rendered criteria query -> select generatedAlias0 from Product as generatedAlias0
2025-05-15T13:03:58.066-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select generatedAlias0 from com.jvidia.reactcloan.entity.Product as generatedAlias0
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'jvidia'
       |     |  |  |  \-[IDENT] Node: 'reactcloan'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Product'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.jvidia.reactcloan.entity.Product (generatedAlias0) -> product0_
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : generatedAlias0 -> product0_.id
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} product0_.id ) ( FromClause{level=1} Product product0_ ) )
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Product): [Product]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Product)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [Product product0_]
2025-05-15T13:03:58.067-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2025-05-15T13:03:58.068-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Product)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'product0_.id as id1_2_' {alias=generatedAlias0, className=com.jvidia.reactcloan.entity.Product, tableAlias=product0_}
    |  \-[SQL_TOKEN] SqlFragment: 'product0_.description as descript2_2_, product0_.name as name3_2_, product0_.price as price4_2_, product0_.quantity as quantity5_2_, product0_.status as status6_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[product0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Product product0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Product,tableAlias=product0_,origin=null,columns={,className=com.jvidia.reactcloan.entity.Product}}

2025-05-15T13:03:58.068-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.068-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select generatedAlias0 from com.jvidia.reactcloan.entity.Product as generatedAlias0
2025-05-15T13:03:58.068-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select product0_.id as id1_2_, product0_.description as descript2_2_, product0_.name as name3_2_, product0_.price as price4_2_, product0_.quantity as quantity5_2_, product0_.status as status6_2_ from Product product0_
2025-05-15T13:03:58.068-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.077-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : select product0_.id as id1_2_, product0_.description as descript2_2_, product0_.name as name3_2_, product0_.price as price4_2_, product0_.quantity as quantity5_2_, product0_.status as status6_2_ from Product product0_
Hibernate: select product0_.id as id1_2_, product0_.description as descript2_2_, product0_.name as name3_2_, product0_.price as price4_2_, product0_.quantity as quantity5_2_, product0_.status as status6_2_ from Product product0_
2025-05-15T13:03:58.079-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 0
2025-05-15T13:03:58.080-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#1]
2025-05-15T13:03:58.082-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 1
2025-05-15T13:03:58.082-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#2]
2025-05-15T13:03:58.082-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 2
2025-05-15T13:03:58.082-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#3]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 3
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#4]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 4
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#5]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 5
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#6]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 6
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#7]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 7
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#8]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 8
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#9]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 9
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#10]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 10
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#11]
2025-05-15T13:03:58.083-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 11
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#12]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 12
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#13]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 13
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#14]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 14
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#15]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 15
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#16]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 16
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#17]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 17
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#18]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 18
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#19]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 19
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#20]
2025-05-15T13:03:58.084-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 20
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#21]
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 21
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#22]
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 22
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#23]
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 23
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#24]
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 24
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#25]
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 25
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#26]
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 26
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#27]
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 27
2025-05-15T13:03:58.085-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#28]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 28
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#29]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 29
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#30]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 30
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#31]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 31
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#32]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 32
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#33]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 33
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#34]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 34
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#35]
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 35
2025-05-15T13:03:58.086-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#36]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 36
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#37]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 37
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#38]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 38
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#39]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 39
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#40]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 40
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#41]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 41
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#42]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 42
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#43]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 43
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#44]
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 44
2025-05-15T13:03:58.087-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#45]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 45
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#46]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 46
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#47]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 47
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#48]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 48
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#49]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 49
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#50]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 50
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#51]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 51
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#52]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 52
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#53]
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 53
2025-05-15T13:03:58.088-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#54]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 54
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#55]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 55
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#56]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 56
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#57]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 57
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#58]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 58
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#59]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 59
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#60]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 60
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#61]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 61
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#62]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 62
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#63]
2025-05-15T13:03:58.089-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 63
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#64]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 64
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#65]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 65
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#66]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 66
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#67]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 67
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#68]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 68
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#69]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 69
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#70]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 70
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#71]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 71
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#72]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 72
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#73]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 73
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#74]
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 74
2025-05-15T13:03:58.090-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#75]
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 75
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#76]
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 76
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#77]
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 77
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#78]
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 78
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#79]
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 79
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#80]
2025-05-15T13:03:58.091-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 80
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#81]
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 81
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#82]
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 82
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#83]
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 83
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#84]
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 84
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#85]
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 85
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#86]
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 86
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#87]
2025-05-15T13:03:58.092-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 87
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#88]
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 88
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#89]
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 89
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#90]
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 90
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#91]
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 91
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#92]
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 92
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#93]
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 93
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#94]
2025-05-15T13:03:58.093-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 94
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#95]
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 95
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#96]
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 96
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#97]
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 97
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#98]
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 98
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#99]
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 99
2025-05-15T13:03:58.094-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Product#100]
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#1]
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Airborne Pickle
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diet Smokes
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 18.31
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.097-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#1]
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#2]
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bris-o-matic
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Demo Lotion
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 22.12
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 12
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.098-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#2]
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#3]
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Data Basket
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Baby Donuts
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 34.16
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#3]
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#4]
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Deal Light
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diet Smokes
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 23.69
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#4]
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#5]
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bath and Relax
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aftertizer
2025-05-15T13:03:58.099-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 65.85
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 15
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#5]
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#6]
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Develaport
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DigiGate
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 26.32
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#6]
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#7]
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aftertizer
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Develaport
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 72.36
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 18
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#7]
2025-05-15T13:03:58.100-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#8]
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = DialUp
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Accruex
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 15.70
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 6
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#8]
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#9]
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Airborne Pickle
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Abundance
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 60.02
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#9]
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#10]
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bath and Relax
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diet Smokes
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 20.12
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 5
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.101-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#10]
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#11]
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Brush n Flush
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 21.70
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 10
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#11]
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#12]
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = DialUp
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bris-o-matic
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 46.07
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 4
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#12]
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#13]
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Adornica
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Alumina
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 59.86
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.102-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#13]
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#14]
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Diet Smokes
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bris-o-matic
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 13.88
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#14]
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#15]
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Brand Dandy
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aftertizer
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 75.25
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 14
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#15]
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#16]
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Accruex
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diet Smokes
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.103-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 85.12
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 4
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#16]
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#17]
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Demo Lotion
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Brush n Flush
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 0.39
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 6
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#17]
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#18]
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = DigiGate
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Brush n Flush
2025-05-15T13:03:58.104-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 12.27
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 1
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#18]
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#19]
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bath and Relax
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bum Bait
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 40.23
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#19]
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#20]
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Abundance
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Data Basket
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 60.75
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 9
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.105-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#20]
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#21]
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Baby Donuts
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Alumina
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 34.21
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.106-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#21]
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#22]
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aerosol Cheese
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Abundance
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 98.50
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 10
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#22]
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#23]
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Acclimaze
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = AirHead
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 62.82
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 18
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#23]
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#24]
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Accruex
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Apple Cheeks
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 21.42
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 3
2025-05-15T13:03:58.107-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#24]
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#25]
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bum Bait
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DigiGate
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 31.71
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#25]
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#26]
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Abundance
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diamond Sky
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 52.31
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 18
2025-05-15T13:03:58.108-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#26]
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#27]
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Diamond Sky
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Accruex
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 0.50
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 2
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#27]
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#28]
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bris-o-matic
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aftertizer
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 2.53
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 9
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#28]
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#29]
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Apple Cheeks
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Alumina
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 95.23
2025-05-15T13:03:58.109-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 3
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#29]
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#30]
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Diamond Sky
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Deal Light
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 78.03
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 4
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#30]
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#31]
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Callflex
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DialUp
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 43.83
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 9
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#31]
2025-05-15T13:03:58.110-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#32]
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Callflex
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bris-o-matic
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 12.33
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 3
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#32]
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#33]
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Brush n Flush
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Botox Barbie
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 87.05
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 1
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#33]
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#34]
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Demo Lotion
2025-05-15T13:03:58.111-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Data Basket
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 80.13
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 18
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#34]
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#35]
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bum Bait
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 20.53
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#35]
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#36]
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Baby Donuts
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Alumina
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 10.73
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 6
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.112-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#36]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#37]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Airborne Pickle
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DialUp
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 67.88
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 10
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#37]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#38]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Airborne Pickle
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 86.77
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#38]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#39]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = DigiGate
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Baby Donuts
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 92.92
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 10
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#39]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#40]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Callflex
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Data Basket
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 40.91
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 12
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#40]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#41]
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Deal Light
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Develaport
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 54.25
2025-05-15T13:03:58.113-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#41]
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#42]
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Data Basket
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Brush n Flush
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 55.34
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 17
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#42]
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#43]
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Callflex
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Botox Barbie
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 5.32
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 10
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#43]
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#44]
2025-05-15T13:03:58.114-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aerosol Cheese
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Abundance
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 40.06
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 1
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#44]
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#45]
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Brush n Flush
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DigiGate
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 60.63
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 6
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#45]
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#46]
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Data Basket
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bum Bait
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 59.83
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 0
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.115-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#46]
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#47]
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = AirHead
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aerosol Cheese
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 2.35
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 5
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#47]
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#48]
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bag of Scones
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Develaport
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 52.41
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 17
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#48]
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#49]
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Apple Cheeks
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diamond Sky
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 23.66
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 18
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.116-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#49]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#50]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Develaport
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Botox Barbie
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 30.62
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 12
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#50]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#51]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aerosol Cheese
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Botox Barbie
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 30.39
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 2
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#51]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#52]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Abundance
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 73.18
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#52]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#53]
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Diamond Sky
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diamond Sky
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 59.38
2025-05-15T13:03:58.117-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#53]
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#54]
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Alumina
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Brand Dandy
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 6.55
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 2
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#54]
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#55]
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = AirHead
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Accruex
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 47.44
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 10
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#55]
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#56]
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Abundance
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aftertizer
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.118-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 95.55
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 11
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#56]
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#57]
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Airborne Pickle
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DialUp
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 71.94
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 0
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#57]
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#58]
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Diamond Sky
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Deal Light
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 43.72
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 14
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#58]
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#59]
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Callflex
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Alumina
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 98.83
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 8
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.119-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#59]
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#60]
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Baby Donuts
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diet Smokes
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 20.07
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 5
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#60]
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#61]
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Alumina
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Botox Barbie
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 78.37
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 3
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#61]
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#62]
2025-05-15T13:03:58.120-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = AirHead
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Apple Cheeks
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 71.69
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 18
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#62]
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#63]
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Diet Smokes
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Data Basket
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 2.43
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 6
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#63]
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#64]
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aftertizer
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Acclimaze
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 24.65
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.121-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#64]
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#65]
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Abundance
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 96.56
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 2
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#65]
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#66]
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Baby Donuts
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 75.78
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 14
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.122-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#66]
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#67]
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DigiGate
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 16.96
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 5
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#67]
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#68]
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bum Bait
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Deal Light
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 17.61
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.123-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#68]
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#69]
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Abundance
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aerosol Cheese
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 42.22
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 4
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#69]
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#70]
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Callflex
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bath and Relax
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 32.64
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#70]
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#71]
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Accruex
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Airborne Pickle
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 14.59
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.124-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#71]
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#72]
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aftertizer
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Adornica
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 91.52
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 7
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#72]
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#73]
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Abundance
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = AirHead
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 18.92
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 8
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#73]
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#74]
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Develaport
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Buster Boon
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 19.84
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.125-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#74]
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#75]
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Deal Light
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Demo Lotion
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 25.47
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 8
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#75]
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#76]
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Adornica
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bum Bait
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 24.60
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 14
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#76]
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#77]
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Demo Lotion
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Abundance
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 58.60
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.126-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#77]
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#78]
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bag of Scones
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Callflex
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 29.41
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 1
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#78]
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#79]
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Data Basket
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DialUp
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 81.31
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 14
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#79]
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#80]
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = AirHead
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Demo Lotion
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 1.89
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 9
2025-05-15T13:03:58.127-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#80]
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#81]
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = DialUp
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aerosol Cheese
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 67.89
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 5
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#81]
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#82]
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Accruex
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Demo Lotion
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 28.39
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 6
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#82]
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#83]
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Abundance
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Demo Lotion
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 30.00
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 10
2025-05-15T13:03:58.128-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#83]
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#84]
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Brush n Flush
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aerosol Cheese
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 42.37
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 4
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#84]
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#85]
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Accruex
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diamond Sky
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 68.08
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#85]
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#86]
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aftertizer
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Apple Cheeks
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 50.35
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 11
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.129-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#86]
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#87]
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Acclimaze
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Callflex
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 77.15
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 16
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#87]
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#88]
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Deal Light
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aerosol Cheese
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 60.15
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 19
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#88]
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#89]
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Data Basket
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = DialUp
2025-05-15T13:03:58.130-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 40.04
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 17
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#89]
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#90]
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Airborne Pickle
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aerosol Cheese
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 61.51
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 3
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#90]
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#91]
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aftertizer
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Demo Lotion
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 97.83
2025-05-15T13:03:58.131-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 8
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#91]
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#92]
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Callflex
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bath and Relax
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 79.10
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#92]
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#93]
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Demo Lotion
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Bag of Scones
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 24.87
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 6
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#93]
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#94]
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = AirHead
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Brand Dandy
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 0.71
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 1
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.132-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#94]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#95]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Brand Dandy
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Demo Lotion
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 46.13
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 11
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#95]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#96]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Bath and Relax
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Develaport
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 78.08
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 15
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#96]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#97]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Abundance
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Brush n Flush
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 7.89
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 13
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#97]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#98]
2025-05-15T13:03:58.133-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Botox Barbie
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Baby Donuts
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 38.15
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 15
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#98]
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#99]
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Airborne Pickle
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Aerosol Cheese
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 25.74
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 8
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#99]
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Product#100]
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `description` : value = Aftertizer
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`description`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = Diet Smokes
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `price` : value = 16.92
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`price`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `quantity` : value = 4
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`quantity`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `status` : value = true
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`status`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.134-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Product#100]
2025-05-15T13:03:58.140-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Initiating transaction commit
2025-05-15T13:03:58.141-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Committing JPA transaction on EntityManager [SessionImpl(1949485879<open>)]
2025-05-15T13:03:58.141-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : committing
2025-05-15T13:03:58.141-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Processing flush-time cascades
2025-05-15T13:03:58.142-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Dirty checking collections
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 insertions, 0 updates, 0 deletions to 100 objects
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : Listing entities:
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=5, price=67.89, name=Aerosol Cheese, description=DialUp, id=81, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=6, price=28.39, name=Demo Lotion, description=Accruex, id=82, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=14, price=81.31, name=DialUp, description=Data Basket, id=79, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=9, price=1.89, name=Demo Lotion, description=AirHead, id=80, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=19, price=58.60, name=Abundance, description=Demo Lotion, id=77, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=1, price=29.41, name=Callflex, description=Bag of Scones, id=78, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=8, price=25.47, name=Demo Lotion, description=Deal Light, id=75, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=14, price=24.60, name=Bum Bait, description=Adornica, id=76, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=17, price=40.04, name=DialUp, description=Data Basket, id=89, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=3, price=61.51, name=Aerosol Cheese, description=Airborne Pickle, id=90, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=16, price=77.15, name=Callflex, description=Acclimaze, id=87, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=19, price=60.15, name=Aerosol Cheese, description=Deal Light, id=88, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=13, price=68.08, name=Diamond Sky, description=Accruex, id=85, status=true}
2025-05-15T13:03:58.144-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=11, price=50.35, name=Apple Cheeks, description=Aftertizer, id=86, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=10, price=30.00, name=Demo Lotion, description=Abundance, id=83, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=4, price=42.37, name=Aerosol Cheese, description=Brush n Flush, id=84, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=13, price=7.89, name=Brush n Flush, description=Abundance, id=97, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=15, price=38.15, name=Baby Donuts, description=Botox Barbie, id=98, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=11, price=46.13, name=Demo Lotion, description=Brand Dandy, id=95, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=15, price=78.08, name=Develaport, description=Bath and Relax, id=96, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Product{quantity=6, price=24.87, name=Bag of Scones, description=Demo Lotion, id=93, status=true}
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : More......
2025-05-15T13:03:58.145-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Closing JPA EntityManager [SessionImpl(1949485879<open>)] after transaction
2025-05-15T13:03:58.146-04:00  INFO 26196 --- [spring-openai] [           main] c.j.r.controller.ProductController       : products total 100 pages total 20 with page size 5
Product(id=1, name=Diet Smokes, price=18.31, quantity=13, description=Airborne Pickle, status=true)Product(id=2, name=Demo Lotion, price=22.12, quantity=12, description=Bris-o-matic, status=true)Product(id=3, name=Baby Donuts, price=34.16, quantity=7, description=Data Basket, status=true)Product(id=4, name=Diet Smokes, price=23.69, quantity=7, description=Deal Light, status=true)Product(id=5, name=Aftertizer, price=65.85, quantity=15, description=Bath and Relax, status=true)Product(id=6, name=DigiGate, price=26.32, quantity=7, description=Develaport, status=true)Product(id=7, name=Develaport, price=72.36, quantity=18, description=Aftertizer, status=true)Product(id=8, name=Accruex, price=15.70, quantity=6, description=DialUp, status=true)Product(id=9, name=Abundance, price=60.02, quantity=13, description=Airborne Pickle, status=true)Product(id=10, name=Diet Smokes, price=20.12, quantity=5, description=Bath and Relax, status=true)Product(id=11, name=Brush n Flush, price=21.70, quantity=10, description=Botox Barbie, status=true)Product(id=12, name=Bris-o-matic, price=46.07, quantity=4, description=DialUp, status=true)Product(id=13, name=Alumina, price=59.86, quantity=19, description=Adornica, status=true)Product(id=14, name=Bris-o-matic, price=13.88, quantity=7, description=Diet Smokes, status=true)Product(id=15, name=Aftertizer, price=75.25, quantity=14, description=Brand Dandy, status=true)Product(id=16, name=Diet Smokes, price=85.12, quantity=4, description=Accruex, status=true)Product(id=17, name=Brush n Flush, price=0.39, quantity=6, description=Demo Lotion, status=true)Product(id=18, name=Brush n Flush, price=12.27, quantity=1, description=DigiGate, status=true)Product(id=19, name=Bum Bait, price=40.23, quantity=13, description=Bath and Relax, status=true)Product(id=20, name=Data Basket, price=60.75, quantity=9, description=Abundance, status=true)Product(id=21, name=Alumina, price=34.21, quantity=19, description=Baby Donuts, status=true)Product(id=22, name=Abundance, price=98.50, quantity=10, description=Aerosol Cheese, status=true)Product(id=23, name=AirHead, price=62.82, quantity=18, description=Acclimaze, status=true)Product(id=24, name=Apple Cheeks, price=21.42, quantity=3, description=Accruex, status=true)Product(id=25, name=DigiGate, price=31.71, quantity=7, description=Bum Bait, status=true)Product(id=26, name=Diamond Sky, price=52.31, quantity=18, description=Abundance, status=true)Product(id=27, name=Accruex, price=0.50, quantity=2, description=Diamond Sky, status=true)Product(id=28, name=Aftertizer, price=2.53, quantity=9, description=Bris-o-matic, status=true)Product(id=29, name=Alumina, price=95.23, quantity=3, description=Apple Cheeks, status=true)Product(id=30, name=Deal Light, price=78.03, quantity=4, description=Diamond Sky, status=true)Product(id=31, name=DialUp, price=43.83, quantity=9, description=Callflex, status=true)Product(id=32, name=Bris-o-matic, price=12.33, quantity=3, description=Callflex, status=true)Product(id=33, name=Botox Barbie, price=87.05, quantity=1, description=Brush n Flush, status=true)Product(id=34, name=Data Basket, price=80.13, quantity=18, description=Demo Lotion, status=true)Product(id=35, name=Bum Bait, price=20.53, quantity=19, description=Botox Barbie, status=true)Product(id=36, name=Alumina, price=10.73, quantity=6, description=Baby Donuts, status=true)Product(id=37, name=DialUp, price=67.88, quantity=10, description=Airborne Pickle, status=true)Product(id=38, name=Airborne Pickle, price=86.77, quantity=19, description=Botox Barbie, status=true)Product(id=39, name=Baby Donuts, price=92.92, quantity=10, description=DigiGate, status=true)Product(id=40, name=Data Basket, price=40.91, quantity=12, description=Callflex, status=true)Product(id=41, name=Develaport, price=54.25, quantity=19, description=Deal Light, status=true)Product(id=42, name=Brush n Flush, price=55.34, quantity=17, description=Data Basket, status=true)Product(id=43, name=Botox Barbie, price=5.32, quantity=10, description=Callflex, status=true)Product(id=44, name=Abundance, price=40.06, quantity=1, description=Aerosol Cheese, status=true)Product(id=45, name=DigiGate, price=60.63, quantity=6, description=Brush n Flush, status=true)Product(id=46, name=Bum Bait, price=59.83, quantity=0, description=Data Basket, status=true)Product(id=47, name=Aerosol Cheese, price=2.35, quantity=5, description=AirHead, status=true)Product(id=48, name=Develaport, price=52.41, quantity=17, description=Bag of Scones, status=true)Product(id=49, name=Diamond Sky, price=23.66, quantity=18, description=Apple Cheeks, status=true)Product(id=50, name=Botox Barbie, price=30.62, quantity=12, description=Develaport, status=true)Product(id=51, name=Botox Barbie, price=30.39, quantity=2, description=Aerosol Cheese, status=true)Product(id=52, name=Abundance, price=73.18, quantity=19, description=Botox Barbie, status=true)Product(id=53, name=Diamond Sky, price=59.38, quantity=7, description=Diamond Sky, status=true)Product(id=54, name=Brand Dandy, price=6.55, quantity=2, description=Alumina, status=true)Product(id=55, name=Accruex, price=47.44, quantity=10, description=AirHead, status=true)Product(id=56, name=Aftertizer, price=95.55, quantity=11, description=Abundance, status=true)Product(id=57, name=DialUp, price=71.94, quantity=0, description=Airborne Pickle, status=true)Product(id=58, name=Deal Light, price=43.72, quantity=14, description=Diamond Sky, status=true)Product(id=59, name=Alumina, price=98.83, quantity=8, description=Callflex, status=true)Product(id=60, name=Diet Smokes, price=20.07, quantity=5, description=Baby Donuts, status=true)Product(id=61, name=Botox Barbie, price=78.37, quantity=3, description=Alumina, status=true)Product(id=62, name=Apple Cheeks, price=71.69, quantity=18, description=AirHead, status=true)Product(id=63, name=Data Basket, price=2.43, quantity=6, description=Diet Smokes, status=true)Product(id=64, name=Acclimaze, price=24.65, quantity=19, description=Aftertizer, status=true)Product(id=65, name=Abundance, price=96.56, quantity=2, description=Botox Barbie, status=true)Product(id=66, name=Baby Donuts, price=75.78, quantity=14, description=Botox Barbie, status=true)Product(id=67, name=DigiGate, price=16.96, quantity=5, description=Botox Barbie, status=true)Product(id=68, name=Deal Light, price=17.61, quantity=13, description=Bum Bait, status=true)Product(id=69, name=Aerosol Cheese, price=42.22, quantity=4, description=Abundance, status=true)Product(id=70, name=Bath and Relax, price=32.64, quantity=13, description=Callflex, status=true)Product(id=71, name=Airborne Pickle, price=14.59, quantity=7, description=Accruex, status=true)Product(id=72, name=Adornica, price=91.52, quantity=7, description=Aftertizer, status=true)Product(id=73, name=AirHead, price=18.92, quantity=8, description=Abundance, status=true)Product(id=74, name=Buster Boon, price=19.84, quantity=19, description=Develaport, status=true)Product(id=75, name=Demo Lotion, price=25.47, quantity=8, description=Deal Light, status=true)Product(id=76, name=Bum Bait, price=24.60, quantity=14, description=Adornica, status=true)Product(id=77, name=Abundance, price=58.60, quantity=19, description=Demo Lotion, status=true)Product(id=78, name=Callflex, price=29.41, quantity=1, description=Bag of Scones, status=true)Product(id=79, name=DialUp, price=81.31, quantity=14, description=Data Basket, status=true)Product(id=80, name=Demo Lotion, price=1.89, quantity=9, description=AirHead, status=true)Product(id=81, name=Aerosol Cheese, price=67.89, quantity=5, description=DialUp, status=true)Product(id=82, name=Demo Lotion, price=28.39, quantity=6, description=Accruex, status=true)Product(id=83, name=Demo Lotion, price=30.00, quantity=10, description=Abundance, status=true)Product(id=84, name=Aerosol Cheese, price=42.37, quantity=4, description=Brush n Flush, status=true)Product(id=85, name=Diamond Sky, price=68.08, quantity=13, description=Accruex, status=true)Product(id=86, name=Apple Cheeks, price=50.35, quantity=11, description=Aftertizer, status=true)Product(id=87, name=Callflex, price=77.15, quantity=16, description=Acclimaze, status=true)Product(id=88, name=Aerosol Cheese, price=60.15, quantity=19, description=Deal Light, status=true)Product(id=89, name=DialUp, price=40.04, quantity=17, description=Data Basket, status=true)Product(id=90, name=Aerosol Cheese, price=61.51, quantity=3, description=Airborne Pickle, status=true)Product(id=91, name=Demo Lotion, price=97.83, quantity=8, description=Aftertizer, status=true)Product(id=92, name=Bath and Relax, price=79.10, quantity=13, description=Callflex, status=true)Product(id=93, name=Bag of Scones, price=24.87, quantity=6, description=Demo Lotion, status=true)Product(id=94, name=Brand Dandy, price=0.71, quantity=1, description=AirHead, status=true)Product(id=95, name=Demo Lotion, price=46.13, quantity=11, description=Brand Dandy, status=true)Product(id=96, name=Develaport, price=78.08, quantity=15, description=Bath and Relax, status=true)Product(id=97, name=Brush n Flush, price=7.89, quantity=13, description=Abundance, status=true)Product(id=98, name=Baby Donuts, price=38.15, quantity=15, description=Botox Barbie, status=true)Product(id=99, name=Aerosol Cheese, price=25.74, quantity=8, description=Airborne Pickle, status=true)Product(id=100, name=Diet Smokes, price=16.92, quantity=4, description=Aftertizer, status=true)2025-05-15T13:03:58.173-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:58.190-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:58.193-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:58.194-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:58.196-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.jvidia.reactcloan.entity.User u WHERE u.name = (:name)
2025-05-15T13:03:58.197-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.197-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'jvidia'
    |  |     |  |  |  \-[IDENT] Node: 'reactcloan'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'name'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'name'

2025-05-15T13:03:58.197-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2025-05-15T13:03:58.198-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.jvidia.reactcloan.entity.User (u) -> user0_
2025-05-15T13:03:58.198-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> user0_.id
2025-05-15T13:03:58.198-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> user0_.id
2025-05-15T13:03:58.198-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.DotNode        : getDataType() : name -> org.hibernate.type.StringType@35c00c
2025-05-15T13:03:58.198-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.name -> user0_.name
2025-05-15T13:03:58.199-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2025-05-15T13:03:58.199-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} USERS user0_ ) ( WHERE ( = ( user0_.name user0_.id name ) ? ) ) )
2025-05-15T13:03:58.199-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [USERS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.User)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.User)
          | path: u.name
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.User)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: name
          \-ParameterNode

2025-05-15T13:03:58.199-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [USERS user0_]
2025-05-15T13:03:58.199-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2025-05-15T13:03:58.199-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_5_' {alias=u, className=com.jvidia.reactcloan.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.firstName as firstnam2_5_, user0_.lastName as lastname3_5_, user0_.name as name4_5_, user0_.password as password5_5_, user0_.userEmail as useremai6_5_, user0_.username as username7_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=com.jvidia.reactcloan.entity.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.name' {propertyName=name,dereferenceType=PRIMITIVE,getPropertyPath=name,path=u.name,tableAlias=user0_,className=com.jvidia.reactcloan.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=com.jvidia.reactcloan.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'name' {originalText=name}
          \-[NAMED_PARAM] ParameterNode: '?' {name=name, expectedType=org.hibernate.type.StringType@35c00c}

2025-05-15T13:03:58.199-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.200-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.jvidia.reactcloan.entity.User u WHERE u.name = (:name)
2025-05-15T13:03:58.200-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select user0_.id as id1_5_, user0_.firstName as firstnam2_5_, user0_.lastName as lastname3_5_, user0_.name as name4_5_, user0_.password as password5_5_, user0_.userEmail as useremai6_5_, user0_.username as username7_5_ from USERS user0_ where user0_.name=?
2025-05-15T13:03:58.200-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.201-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:58.201-04:00 DEBUG 26196 --- [spring-openai] [           main] tor$SharedEntityManagerInvocationHandler : Creating new EntityManager for shared EntityManager invocation
2025-05-15T13:03:58.203-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT u FROM com.jvidia.reactcloan.entity.User u WHERE u.username= (:username)
2025-05-15T13:03:58.204-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.205-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  +-[FROM] Node: 'FROM'
    |  |  \-[RANGE] Node: 'RANGE'
    |  |     +-[DOT] Node: '.'
    |  |     |  +-[DOT] Node: '.'
    |  |     |  |  +-[DOT] Node: '.'
    |  |     |  |  |  +-[DOT] Node: '.'
    |  |     |  |  |  |  +-[IDENT] Node: 'com'
    |  |     |  |  |  |  \-[IDENT] Node: 'jvidia'
    |  |     |  |  |  \-[IDENT] Node: 'reactcloan'
    |  |     |  |  \-[IDENT] Node: 'entity'
    |  |     |  \-[IDENT] Node: 'User'
    |  |     \-[ALIAS] Node: 'u'
    |  \-[SELECT] Node: 'SELECT'
    |     \-[IDENT] Node: 'u'
    \-[WHERE] Node: 'WHERE'
       \-[EQ] Node: '='
          +-[DOT] Node: '.'
          |  +-[IDENT] Node: 'u'
          |  \-[IDENT] Node: 'username'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'username'

2025-05-15T13:03:58.205-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.jvidia.reactcloan.entity.User (u) -> user0_
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> user0_.id
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u -> user0_.id
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.DotNode        : getDataType() : username -> org.hibernate.type.StringType@35c00c
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : u.username -> user0_.username
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} user0_.id ) ( FromClause{level=1} USERS user0_ ) ( WHERE ( = ( user0_.username user0_.id username ) ? ) ) )
2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [USERS]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.User)
    |  | originalText: u
    |  \-SqlFragment
    +-FromClause
    |  \-FromElement
    \-SqlNode
       \-BinaryLogicOperatorNode
          +-DotNode
          | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.User)
          | path: u.username
          |  +-IdentNode
          |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.User)
          |  | originalText: u
          |  \-IdentNode
          |    persister: null
          |    originalText: username
          \-ParameterNode

2025-05-15T13:03:58.206-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [USERS user0_]
2025-05-15T13:03:58.207-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2025-05-15T13:03:58.207-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.id as id1_5_' {alias=u, className=com.jvidia.reactcloan.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.firstName as firstnam2_5_, user0_.lastName as lastname3_5_, user0_.name as name4_5_, user0_.password as password5_5_, user0_.userEmail as useremai6_5_, user0_.username as username7_5_'
    +-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[u], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=u,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=com.jvidia.reactcloan.entity.User}}
    \-[WHERE] SqlNode: 'WHERE'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'user0_.username' {propertyName=username,dereferenceType=PRIMITIVE,getPropertyPath=username,path=u.username,tableAlias=user0_,className=com.jvidia.reactcloan.entity.User,classAlias=u}
          |  +-[ALIAS_REF] IdentNode: 'user0_.id' {alias=u, className=com.jvidia.reactcloan.entity.User, tableAlias=user0_}
          |  \-[IDENT] IdentNode: 'username' {originalText=username}
          \-[NAMED_PARAM] ParameterNode: '?' {name=username, expectedType=org.hibernate.type.StringType@35c00c}

2025-05-15T13:03:58.207-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.207-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT u FROM com.jvidia.reactcloan.entity.User u WHERE u.username= (:username)
2025-05-15T13:03:58.207-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select user0_.id as id1_5_, user0_.firstName as firstnam2_5_, user0_.lastName as lastname3_5_, user0_.name as name4_5_, user0_.password as password5_5_, user0_.userEmail as useremai6_5_, user0_.username as username7_5_ from USERS user0_ where user0_.username=?
2025-05-15T13:03:58.207-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.261-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.saveAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2025-05-15T13:03:58.261-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Opened new EntityManager [SessionImpl(216156824<open>)] for JPA transaction
2025-05-15T13:03:58.261-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:58.261-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : begin
2025-05-15T13:03:58.262-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@19858f26]
2025-05-15T13:03:58.263-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.263-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.263-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.264-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 1
2025-05-15T13:03:58.264-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.265-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.265-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.265-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 2
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 3
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.266-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 4
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 5
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.267-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 6
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 7
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 8
2025-05-15T13:03:58.268-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 9
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.j.internal.PersistenceUnitUtilImpl   : jakarta.persistence.PersistenceUnitUtil.getIdentifier is only intended to work with enhanced entities (although Hibernate also adapts this support to its proxies); however the passed entity was not enhanced (nor a proxy).. may not be able to read identifier
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.engine.spi.ActionQueue     : Executing identity-insert immediately
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : insert into Client (id, email, name) values (default, ?, ?)
Hibernate: insert into Client (id, email, name) values (default, ?, ?)
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.id.IdentifierGeneratorHelper         : Natively generated identity: 10
2025-05-15T13:03:58.269-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.r.j.i.ResourceRegistryStandardImpl   : HHH000387: ResultSet's statement was not registered
2025-05-15T13:03:58.270-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Initiating transaction commit
2025-05-15T13:03:58.271-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Committing JPA transaction on EntityManager [SessionImpl(216156824<open>)]
2025-05-15T13:03:58.271-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : committing
2025-05-15T13:03:58.271-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Processing flush-time cascades
2025-05-15T13:03:58.271-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Dirty checking collections
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 insertions, 0 updates, 0 deletions to 10 objects
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.i.AbstractFlushingEventListener    : Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : Listing entities:
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=ABC Finance, id=1, email=a12@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=ESPAN, id=2, email=Kevin@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=ABC Warehouse, id=3, email=a12@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=SISLLC, id=4, email=jdoe@email.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=ABC Finance, id=5, email=Don@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=ABC Finance, id=6, email=Doug@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=ABC Finance, id=7, email=Ashley@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=CNBC, id=8, email=Ben@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=NBC Finance, id=9, email=Jeff@ciminc.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.hibernate.internal.util.EntityPrinter  : com.jvidia.reactcloan.entity.Client{name=CNBC, id=10, email=dbush@email.com}
2025-05-15T13:03:58.272-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Closing JPA EntityManager [SessionImpl(216156824<open>)] after transaction
2025-05-15T13:03:58.273-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Creating new transaction with name [org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly
2025-05-15T13:03:58.273-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Opened new EntityManager [SessionImpl(498395719<open>)] for JPA transaction
2025-05-15T13:03:58.274-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2025-05-15T13:03:58.274-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : begin
2025-05-15T13:03:58.274-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Exposing JPA transaction as JDBC [org.springframework.orm.jpa.vendor.HibernateJpaDialect$HibernateConnectionHandle@3abe8714]
2025-05-15T13:03:58.274-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.q.c.internal.CriteriaQueryImpl       : Rendered criteria query -> select generatedAlias0 from Client as generatedAlias0
2025-05-15T13:03:58.274-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select generatedAlias0 from com.jvidia.reactcloan.entity.Client as generatedAlias0
2025-05-15T13:03:58.275-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.275-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'jvidia'
       |     |  |  |  \-[IDENT] Node: 'reactcloan'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'Client'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2025-05-15T13:03:58.275-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2025-05-15T13:03:58.275-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.jvidia.reactcloan.entity.Client (generatedAlias0) -> client0_
2025-05-15T13:03:58.275-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : generatedAlias0 -> client0_.id
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} client0_.id ) ( FromClause{level=1} Client client0_ ) )
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity Client): [Client]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.jvidia.reactcloan.entity.Client)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [Client client0_]
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Client)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'client0_.id as id1_1_' {alias=generatedAlias0, className=com.jvidia.reactcloan.entity.Client, tableAlias=client0_}
    |  \-[SQL_TOKEN] SqlFragment: 'client0_.email as email2_1_, client0_.name as name3_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[client0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Client client0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=Client,tableAlias=client0_,origin=null,columns={,className=com.jvidia.reactcloan.entity.Client}}

2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select generatedAlias0 from com.jvidia.reactcloan.entity.Client as generatedAlias0
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select client0_.id as id1_1_, client0_.email as email2_1_, client0_.name as name3_1_ from Client client0_
2025-05-15T13:03:58.276-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.hql.internal.ast.ErrorTracker        : throwQueryException() : no errors
2025-05-15T13:03:58.277-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.SQL                        : select client0_.id as id1_1_, client0_.email as email2_1_, client0_.name as name3_1_ from Client client0_
Hibernate: select client0_.id as id1_1_, client0_.email as email2_1_, client0_.name as name3_1_ from Client client0_
2025-05-15T13:03:58.277-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 0
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#1]
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 1
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#2]
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 2
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#3]
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 3
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#4]
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 4
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#5]
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 5
2025-05-15T13:03:58.278-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#6]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 6
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#7]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 7
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#8]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 8
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#9]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result set row: 9
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] org.hibernate.loader.Loader              : Result row: EntityKey[com.jvidia.reactcloan.entity.Client#10]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#1]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = a12@ciminc.com
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = ABC Finance
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#1]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#2]
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = Kevin@ciminc.com
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = ESPAN
2025-05-15T13:03:58.279-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#2]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#3]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = a12@ciminc.com
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = ABC Warehouse
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#3]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#4]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = jdoe@email.com
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = SISLLC
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#4]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#5]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = Don@ciminc.com
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = ABC Finance
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#5]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#6]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = Doug@ciminc.com
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = ABC Finance
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#6]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#7]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = Ashley@ciminc.com
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = ABC Finance
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#7]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#8]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = Ben@ciminc.com
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = CNBC
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#8]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#9]
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = Jeff@ciminc.com
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = NBC Finance
2025-05-15T13:03:58.280-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#9]
2025-05-15T13:03:58.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Resolving attributes for [com.jvidia.reactcloan.entity.Client#10]
2025-05-15T13:03:58.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `email` : value = dbush@email.com
2025-05-15T13:03:58.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`email`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Processing attribute `name` : value = CNBC
2025-05-15T13:03:58.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Attribute (`name`)  - enhanced for lazy-loading? - false
2025-05-15T13:03:58.281-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.jvidia.reactcloan.entity.Client#10]
2025-05-15T13:03:58.282-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Initiating transaction commit
2025-05-15T13:03:58.282-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Committing JPA transaction on EntityManager [SessionImpl(498395719<open>)]
2025-05-15T13:03:58.282-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.e.t.internal.TransactionImpl         : committing
2025-05-15T13:03:58.282-04:00 DEBUG 26196 --- [spring-openai] [           main] o.s.orm.jpa.JpaTransactionManager        : Closing JPA EntityManager [SessionImpl(498395719<open>)] after transaction
Client(id=1, name=ABC Finance, email=a12@ciminc.com)Client(id=2, name=ESPAN, email=Kevin@ciminc.com)Client(id=3, name=ABC Warehouse, email=a12@ciminc.com)Client(id=4, name=SISLLC, email=jdoe@email.com)Client(id=5, name=ABC Finance, email=Don@ciminc.com)Client(id=6, name=ABC Finance, email=Doug@ciminc.com)Client(id=7, name=ABC Finance, email=Ashley@ciminc.com)Client(id=8, name=CNBC, email=Ben@ciminc.com)Client(id=9, name=NBC Finance, email=Jeff@ciminc.com)Client(id=10, name=CNBC, email=dbush@email.com)2025-05-15T13:03:58.685-04:00  WARN 26196 --- [spring-openai] [           main] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-05-15T13:03:58.719-04:00  WARN 26196 --- [spring-openai] [           main] r$InitializeUserDetailsManagerConfigurer : Found 2 UserDetailsService beans, with names [userDetailsService, users]. Global Authentication Manager will not use a UserDetailsService for username/password login. Consider publishing a single UserDetailsService bean.
2025-05-15T13:04:00.076-04:00  INFO 26196 --- [spring-openai] [           main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/21.0.5+9-LTS-239"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@a95c1f6, socketChannelClass=null, allocator=null, sslContext=null}, commandListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsCommandListener@4835e10a], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6cee6eb7, com.mongodb.Jep395RecordCodecProvider@4b29f03e, com.mongodb.KotlinCodecProvider@1d891373]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[io.micrometer.core.instrument.binder.mongodb.MongoMetricsConnectionPoolListener@6dbf203c], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-15T13:04:00.162-04:00  INFO 26196 --- [spring-openai] [localhost:27017] org.mongodb.driver.cluster               : Exception in monitor thread while connecting to server localhost:27017

com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.netty.NettyStream$OpenChannelFutureListener.lambda$operationComplete$1(NettyStream.java:534) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.Locks.lambda$withLock$0(Locks.java:35) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.Locks.checkedWithLock(Locks.java:62) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.Locks.withLock(Locks.java:56) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.Locks.withLock(Locks.java:34) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.netty.NettyStream$OpenChannelFutureListener.operationComplete(NettyStream.java:521) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.netty.NettyStream$OpenChannelFutureListener.operationComplete(NettyStream.java:504) ~[mongodb-driver-core-5.2.1.jar:na]
	at io.netty.util.concurrent.DefaultPromise.notifyListener0(DefaultPromise.java:590) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners0(DefaultPromise.java:583) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListenersNow(DefaultPromise.java:559) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.DefaultPromise.notifyListeners(DefaultPromise.java:492) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.DefaultPromise.setValue0(DefaultPromise.java:636) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.DefaultPromise.setFailure0(DefaultPromise.java:629) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.DefaultPromise.tryFailure(DefaultPromise.java:118) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:326) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:342) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]
Caused by: io.netty.channel.AbstractChannel$AnnotatedConnectException: Connection refused: getsockopt: localhost/[0:0:0:0:0:0:0:1]:27017
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method) ~[na:na]
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682) ~[na:na]
	at java.base/sun.nio.ch.SocketChannelImpl.finishConnect(SocketChannelImpl.java:973) ~[na:na]
	at io.netty.channel.socket.nio.NioSocketChannel.doFinishConnect(NioSocketChannel.java:336) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:339) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:784) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:732) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:658) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562) ~[netty-transport-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:998) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.119.Final.jar:4.1.119.Final]
	at java.base/java.lang.Thread.run(Thread.java:1583) ~[na:na]

2025-05-15T13:04:00.369-04:00  INFO 26196 --- [spring-openai] [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoints beneath base path '/actuator'
2025-05-15T13:04:00.521-04:00  WARN 26196 --- [spring-openai] [           main] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Deferred [Mvc [pattern='/resources/**'], Ant [pattern='/resources/**']]. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2025-05-15T13:04:00.701-04:00 DEBUG 26196 --- [spring-openai] [           main] .h.v.m.ResourceBundleMessageInterpolator : Loaded expression factory via original TCCL
2025-05-15T13:04:00.703-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.e.AbstractConfigurationImpl      : Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2025-05-15T13:04:00.704-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.e.AbstractConfigurationImpl      : Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2025-05-15T13:04:00.706-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ValidationXmlParser   : Trying to load META-INF/validation.xml for XML based Validator configuration.
2025-05-15T13:04:00.706-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via user class loader
2025-05-15T13:04:00.707-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via TCCL
2025-05-15T13:04:00.707-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2025-05-15T13:04:00.707-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.xml.config.ValidationXmlParser   : No META-INF/validation.xml found. Using annotation based configuration only.
2025-05-15T13:04:00.707-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.e.resolver.TraversableResolvers  : Found jakarta.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2025-05-15T13:04:00.707-04:00 DEBUG 26196 --- [spring-openai] [           main] o.h.v.i.e.resolver.TraversableResolvers  : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2025-05-15T13:04:00.708-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
2025-05-15T13:04:00.708-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
2025-05-15T13:04:00.708-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
2025-05-15T13:04:00.708-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
2025-05-15T13:04:00.708-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
2025-05-15T13:04:00.708-04:00 DEBUG 26196 --- [spring-openai] [           main] .i.e.ValidatorFactoryConfigurationHelper : HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
2025-05-15T13:04:01.361-04:00  INFO 26196 --- [spring-openai] [           main] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:testdb'
2025-05-15T13:04:01.464-04:00  INFO 26196 --- [spring-openai] [           main] c.j.reactcloan.JvidiaReactCarloanTests   : Started JvidiaReactCarloanTests in 9.779 seconds (process running for 11.24)
2025-05-15T13:04:01.470-04:00  INFO 26196 --- [spring-openai] [           main] o.s.b.a.b.JobLauncherApplicationRunner   : Running default command line with: []
]]></system-out>
    <system-err><![CDATA[Mockito is currently self-attaching to enable the inline-mock-maker. This will no longer work in future releases of the JDK. Please add Mockito as an agent to your build what is described in Mockito's documentation: https://javadoc.io/doc/org.mockito/mockito-core/latest/org/mockito/Mockito.html#0.3
WARNING: A Java agent has been loaded dynamically (C:\Users\javaugi\.m2\repository\net\bytebuddy\byte-buddy-agent\1.15.11\byte-buddy-agent-1.15.11.jar)
WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
WARNING: Dynamic loading of agents will be disallowed by default in a future release
]]></system-err>
  </testcase>
</testsuite>